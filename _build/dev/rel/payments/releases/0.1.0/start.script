{script,
    {"payments","0.1.0"},
    [{preLoaded,
         [atomics,counters,erl_init,erl_prim_loader,erl_tracer,erlang,
          erts_code_purger,erts_dirty_process_signal_handler,erts_internal,
          erts_literal_area_collector,init,persistent_term,prim_buffer,
          prim_eval,prim_file,prim_inet,prim_net,prim_socket,prim_zip,
          socket_registry,zlib]},
     {progress,preloaded},
     {path,
         ["$ERTS_LIB_DIR/kernel-8.5.1/ebin",
          "$ERTS_LIB_DIR/stdlib-4.1.1/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,logger,logger_filters,logger_server,logger_backend,
          logger_config,logger_simple_h,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ERTS_LIB_DIR/kernel-8.5.1/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_compile_server,
          erl_ddll,erl_distribution,erl_epmd,erl_erts_errors,
          erl_kernel_errors,erl_reply,erl_signal_handler,erpc,erts_debug,
          gen_sctp,gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,global,
          global_group,global_search,group,group_history,inet,inet6_sctp,
          inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,inet_db,inet_dns,
          inet_gethost_native,inet_hosts,inet_parse,inet_res,inet_sctp,
          inet_tcp,inet_tcp_dist,inet_udp,kernel_config,kernel_refc,local_tcp,
          local_udp,logger_disk_log_h,logger_formatter,logger_h_common,
          logger_handler_watcher,logger_olp,logger_proxy,logger_std_h,
          logger_sup,net,net_adm,net_kernel,os,pg,pg2,ram_file,raw_file_io,
          raw_file_io_compressed,raw_file_io_deflate,raw_file_io_delayed,
          raw_file_io_inflate,raw_file_io_list,rpc,seq_trace,socket,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ERTS_LIB_DIR/stdlib-4.1.1/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v9,dict,digraph,digraph_utils,edlin,edlin_expand,
          epp,erl_abstract_code,erl_anno,erl_bits,erl_compile,erl_error,
          erl_expand_records,erl_features,erl_internal,erl_posix_msg,erl_pp,
          erl_scan,erl_stdlib_errors,erl_tar,error_logger_file_h,
          error_logger_tty_h,escript,eval_bits,file_sorter,filelib,gb_sets,
          gb_trees,gen_fsm,gen_statem,io,io_lib,io_lib_format,io_lib_fread,
          io_lib_pretty,log_mf_h,maps,math,ms_transform,orddict,ordsets,
          otp_internal,peer,pool,proplists,qlc,qlc_pt,queue,rand,random,re,
          sets,shell,shell_default,shell_docs,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,unicode_util,uri_string,
          win32reg,zip]},
     {path,["$ERTS_LIB_DIR/compiler-8.2.1/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bounds,beam_call_types,beam_clean,
          beam_dict,beam_digraph,beam_disasm,beam_flatten,beam_jump,
          beam_kernel_to_ssa,beam_listing,beam_opcodes,beam_ssa,
          beam_ssa_bc_size,beam_ssa_bool,beam_ssa_bsm,beam_ssa_codegen,
          beam_ssa_dead,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
          beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,beam_ssa_throw,
          beam_ssa_type,beam_trim,beam_types,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_trees,compile,core_lib,core_lint,
          core_parse,core_pp,core_scan,erl_bifs,rec_env,sys_core_alias,
          sys_core_bsm,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_core_prepare,sys_messages,sys_pre_attributes,v3_core,v3_kernel,
          v3_kernel_pp]},
     {path,["$ROOT/lib/elixir-1.14.0/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.Calendar.TimeZoneDatabase',
          'Elixir.Calendar.UTCOnlyTimeZoneDatabase','Elixir.CaseClauseError',
          'Elixir.Code','Elixir.Code.Formatter','Elixir.Code.Fragment',
          'Elixir.Code.Identifier','Elixir.Code.LoadError',
          'Elixir.Code.Normalizer','Elixir.Code.Typespec',
          'Elixir.Collectable','Elixir.Collectable.BitString',
          'Elixir.Collectable.File.Stream','Elixir.Collectable.HashDict',
          'Elixir.Collectable.HashSet','Elixir.Collectable.IO.Stream',
          'Elixir.Collectable.List','Elixir.Collectable.Map',
          'Elixir.Collectable.MapSet','Elixir.CompileError',
          'Elixir.CondClauseError','Elixir.Config','Elixir.Config.Provider',
          'Elixir.Config.Reader','Elixir.Date','Elixir.Date.Range',
          'Elixir.DateTime','Elixir.Dict','Elixir.DynamicSupervisor',
          'Elixir.Enum','Elixir.Enum.EmptyError',
          'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
          'Elixir.Enumerable.Date.Range','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.LinkError',
          'Elixir.File.RenameError','Elixir.File.Stat','Elixir.File.Stream',
          'Elixir.Float','Elixir.Function','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Date.Range','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Inspect.Error',
          'Elixir.Inspect.Integer','Elixir.Inspect.List',
          'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
          'Elixir.Inspect.MapSet','Elixir.Inspect.NaiveDateTime',
          'Elixir.Inspect.Opts','Elixir.Inspect.PID','Elixir.Inspect.Port',
          'Elixir.Inspect.Range','Elixir.Inspect.Reference',
          'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
          'Elixir.Inspect.Time','Elixir.Inspect.Tuple','Elixir.Inspect.URI',
          'Elixir.Inspect.Version','Elixir.Inspect.Version.Requirement',
          'Elixir.Integer','Elixir.Kernel','Elixir.Kernel.CLI',
          'Elixir.Kernel.ErrorHandler','Elixir.Kernel.LexicalTracker',
          'Elixir.Kernel.ParallelCompiler','Elixir.Kernel.ParallelRequire',
          'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
          'Elixir.Kernel.Utils','Elixir.KeyError','Elixir.Keyword',
          'Elixir.List','Elixir.List.Chars','Elixir.List.Chars.Atom',
          'Elixir.List.Chars.BitString','Elixir.List.Chars.Float',
          'Elixir.List.Chars.Integer','Elixir.List.Chars.List','Elixir.Macro',
          'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet','Elixir.MatchError',
          'Elixir.Module','Elixir.Module.LocalsTracker',
          'Elixir.Module.ParallelChecker','Elixir.Module.Types',
          'Elixir.Module.Types.Error','Elixir.Module.Types.Expr',
          'Elixir.Module.Types.Helpers','Elixir.Module.Types.Of',
          'Elixir.Module.Types.Pattern','Elixir.Module.Types.Unify',
          'Elixir.NaiveDateTime','Elixir.Node','Elixir.OptionParser',
          'Elixir.OptionParser.ParseError','Elixir.PartitionSupervisor',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Chars','Elixir.String.Chars.Atom',
          'Elixir.String.Chars.BitString','Elixir.String.Chars.Date',
          'Elixir.String.Chars.DateTime','Elixir.String.Chars.Float',
          'Elixir.String.Chars.Integer','Elixir.String.Chars.List',
          'Elixir.String.Chars.NaiveDateTime','Elixir.String.Chars.Time',
          'Elixir.String.Chars.URI','Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement','Elixir.String.Tokenizer',
          'Elixir.String.Tokenizer.ScriptSet',
          'Elixir.String.Tokenizer.Security','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.System.EnvError','Elixir.System.SignalHandler',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.URI.Error','Elixir.UndefinedFunctionError',
          'Elixir.UnicodeConversionError','Elixir.Version',
          'Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Requirement','Elixir.WithClauseError',elixir,
          elixir_aliases,elixir_bitstring,elixir_bootstrap,elixir_clauses,
          elixir_code_server,elixir_compiler,elixir_config,elixir_def,
          elixir_dispatch,elixir_env,elixir_erl,elixir_erl_clauses,
          elixir_erl_compiler,elixir_erl_for,elixir_erl_pass,elixir_erl_try,
          elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_overridable,elixir_parser,elixir_quote,
          elixir_rewrite,elixir_sup,elixir_tokenizer,elixir_utils]},
     {path,["$ROOT/lib/mix-1.14.0/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Mix.Shell','Elixir.Mix','Elixir.Mix.CLI',
          'Elixir.Mix.Compilers.ApplicationTracer',
          'Elixir.Mix.Compilers.Elixir','Elixir.Mix.Compilers.Erlang',
          'Elixir.Mix.Compilers.Test','Elixir.Mix.Config','Elixir.Mix.Dep',
          'Elixir.Mix.Dep.Converger','Elixir.Mix.Dep.ElixirSCM',
          'Elixir.Mix.Dep.Fetcher','Elixir.Mix.Dep.Loader',
          'Elixir.Mix.Dep.Lock','Elixir.Mix.Dep.Umbrella',
          'Elixir.Mix.ElixirVersionError','Elixir.Mix.Error',
          'Elixir.Mix.Generator','Elixir.Mix.Hex',
          'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
          'Elixir.Mix.Local.Installer','Elixir.Mix.NoProjectError',
          'Elixir.Mix.NoTaskError','Elixir.Mix.Project',
          'Elixir.Mix.ProjectStack','Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
          'Elixir.Mix.Release','Elixir.Mix.RemoteConverger','Elixir.Mix.SCM',
          'Elixir.Mix.SCM.Git','Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
          'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
          'Elixir.Mix.Shell.Quiet','Elixir.Mix.State','Elixir.Mix.Task',
          'Elixir.Mix.Task.Compiler','Elixir.Mix.Task.Compiler.Diagnostic',
          'Elixir.Mix.Tasks.App.Config','Elixir.Mix.Tasks.App.Start',
          'Elixir.Mix.Tasks.App.Tree','Elixir.Mix.Tasks.Archive',
          'Elixir.Mix.Tasks.Archive.Build','Elixir.Mix.Tasks.Archive.Check',
          'Elixir.Mix.Tasks.Archive.Install',
          'Elixir.Mix.Tasks.Archive.Uninstall','Elixir.Mix.Tasks.Clean',
          'Elixir.Mix.Tasks.Cmd','Elixir.Mix.Tasks.Compile',
          'Elixir.Mix.Tasks.Compile.All','Elixir.Mix.Tasks.Compile.App',
          'Elixir.Mix.Tasks.Compile.Elixir','Elixir.Mix.Tasks.Compile.Erlang',
          'Elixir.Mix.Tasks.Compile.Leex',
          'Elixir.Mix.Tasks.Compile.Protocols',
          'Elixir.Mix.Tasks.Compile.Yecc','Elixir.Mix.Tasks.Deps',
          'Elixir.Mix.Tasks.Deps.Clean','Elixir.Mix.Tasks.Deps.Compile',
          'Elixir.Mix.Tasks.Deps.Get','Elixir.Mix.Tasks.Deps.Loadpaths',
          'Elixir.Mix.Tasks.Deps.Precompile','Elixir.Mix.Tasks.Deps.Tree',
          'Elixir.Mix.Tasks.Deps.Unlock','Elixir.Mix.Tasks.Deps.Update',
          'Elixir.Mix.Tasks.Do','Elixir.Mix.Tasks.Escript',
          'Elixir.Mix.Tasks.Escript.Build','Elixir.Mix.Tasks.Escript.Install',
          'Elixir.Mix.Tasks.Escript.Uninstall','Elixir.Mix.Tasks.Eval',
          'Elixir.Mix.Tasks.Format','Elixir.Mix.Tasks.Help',
          'Elixir.Mix.Tasks.Iex','Elixir.Mix.Tasks.Loadconfig',
          'Elixir.Mix.Tasks.Loadpaths','Elixir.Mix.Tasks.Local',
          'Elixir.Mix.Tasks.Local.Hex','Elixir.Mix.Tasks.Local.PublicKeys',
          'Elixir.Mix.Tasks.Local.Rebar','Elixir.Mix.Tasks.New',
          'Elixir.Mix.Tasks.Profile.Cprof','Elixir.Mix.Tasks.Profile.Eprof',
          'Elixir.Mix.Tasks.Profile.Fprof','Elixir.Mix.Tasks.Release',
          'Elixir.Mix.Tasks.Release.Init','Elixir.Mix.Tasks.Run',
          'Elixir.Mix.Tasks.Test','Elixir.Mix.Tasks.Test.Coverage',
          'Elixir.Mix.Tasks.WillRecompile','Elixir.Mix.Tasks.Xref',
          'Elixir.Mix.TasksServer','Elixir.Mix.Utils']},
     {path,["$ROOT/lib/artificery-0.4.3/ebin"]},
     {primLoad,
         ['Elixir.Artificery','Elixir.Artificery.Command',
          'Elixir.Artificery.Console','Elixir.Artificery.Console.Color',
          'Elixir.Artificery.Console.Color.ANSI',
          'Elixir.Artificery.Console.Events',
          'Elixir.Artificery.Console.Prompt',
          'Elixir.Artificery.Console.Spinner',
          'Elixir.Artificery.Console.Table','Elixir.Artificery.Entry',
          'Elixir.Artificery.Option']},
     {path,["$ERTS_LIB_DIR/runtime_tools-1.19/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          runtime_tools,runtime_tools_sup,scheduler,system_information,
          ttb_autostart]},
     {path,["$ROOT/lib/distillery-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Distillery.Cookies','Elixir.Distillery.Releases.App',
          'Elixir.Distillery.Releases.Appup',
          'Elixir.Distillery.Releases.Appup.Transform',
          'Elixir.Distillery.Releases.Appup.TransformError',
          'Elixir.Distillery.Releases.Appup.Utils',
          'Elixir.Distillery.Releases.Archiver',
          'Elixir.Distillery.Releases.Archiver.Archive',
          'Elixir.Distillery.Releases.Assembler',
          'Elixir.Distillery.Releases.BootScript',
          'Elixir.Distillery.Releases.Checks',
          'Elixir.Distillery.Releases.Checks.Cookie',
          'Elixir.Distillery.Releases.Checks.Erts',
          'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
          'Elixir.Distillery.Releases.Config',
          'Elixir.Distillery.Releases.Config.LoadError',
          'Elixir.Distillery.Releases.Config.Provider',
          'Elixir.Distillery.Releases.Config.Providers.Elixir',
          'Elixir.Distillery.Releases.Environment',
          'Elixir.Distillery.Releases.Errors',
          'Elixir.Distillery.Releases.Overlays',
          'Elixir.Distillery.Releases.Plugin',
          'Elixir.Distillery.Releases.Profile',
          'Elixir.Distillery.Releases.Release',
          'Elixir.Distillery.Releases.Runtime.Control',
          'Elixir.Distillery.Releases.Runtime.Pidfile',
          'Elixir.Distillery.Releases.Shell',
          'Elixir.Distillery.Releases.Shell.Macros',
          'Elixir.Distillery.Releases.Utils',
          'Elixir.Mix.Tasks.Distillery.Gen.Appup',
          'Elixir.Mix.Tasks.Distillery.Init',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock',
          'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
          'Elixir.Mix.Tasks.Distillery.Release',
          'Elixir.Mix.Tasks.Distillery.Release.Clean']},
     {path,["$ERTS_LIB_DIR/sasl-4.2/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,systools,systools_lib,
          systools_make,systools_rc,systools_relup]},
     {path,["$ROOT/lib/iex-1.14.0/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.Broker','Elixir.IEx.CLI','Elixir.IEx.Config',
          'Elixir.IEx.Evaluator','Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.Info','Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
          'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
          'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
          'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection','Elixir.IEx.Pry',
          'Elixir.IEx.Server','Elixir.IEx.State']},
     {path,["$ROOT/lib/logger-1.14.0/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.BackendSupervisor','Elixir.Logger.Backends.Console',
          'Elixir.Logger.Config','Elixir.Logger.Filter',
          'Elixir.Logger.Formatter','Elixir.Logger.Handler',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ERTS_LIB_DIR/syntax_tools-3.0/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,merl,merl_transform,prettypr]},
     {path,["$ROOT/lib/goldrush-0.1.9/ebin"]},
     {primLoad,
         [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,gr_context,gr_counter,
          gr_counter_sup,gr_manager,gr_manager_sup,gr_param,gr_param_sup,
          gr_sup,gre]},
     {path,["$ROOT/lib/lager-3.9.2/ebin"]},
     {primLoad,
         [error_logger_lager_h,lager,lager_app,lager_backend_throttle,
          lager_common_test_backend,lager_config,lager_console_backend,
          lager_crash_log,lager_default_formatter,lager_file_backend,
          lager_format,lager_handler_watcher,lager_handler_watcher_sup,
          lager_manager_killer,lager_msg,lager_rotator_behaviour,
          lager_rotator_default,lager_stdlib,lager_sup,lager_transform,
          lager_trunc_io,lager_util]},
     {path,["$ERTS_LIB_DIR/xmerl-1.3.30/ebin"]},
     {primLoad,
         [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,xmerl_html,
          xmerl_lib,xmerl_otpsgml,xmerl_regexp,xmerl_sax_old_dom,
          xmerl_sax_parser,xmerl_sax_parser_latin1,xmerl_sax_parser_list,
          xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
          xmerl_sax_parser_utf8,xmerl_sax_simple_dom,xmerl_scan,xmerl_sgml,
          xmerl_simple,xmerl_text,xmerl_ucs,xmerl_uri,xmerl_validate,
          xmerl_xlate,xmerl_xml,xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
          xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
          xmerl_xsd_type]},
     {path,["$ERTS_LIB_DIR/crypto-5.1.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ERTS_LIB_DIR/asn1-5.0.21/ebin"]},
     {primLoad,[asn1rt_nif]},
     {path,["$ERTS_LIB_DIR/public_key-1.13.1/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_ocsp,pubkey_os_cacerts,pubkey_pbe,pubkey_pem,
          pubkey_ssh,public_key]},
     {path,["$ERTS_LIB_DIR/ssl-10.8.5/ebin"]},
     {primLoad,
         [dtls_connection,dtls_connection_sup,dtls_gen_connection,
          dtls_handshake,dtls_listener_sup,dtls_packet_demux,dtls_record,
          dtls_server_session_cache_sup,dtls_server_sup,dtls_socket,dtls_sup,
          dtls_v1,inet6_tls_dist,inet_tls_dist,ssl,ssl_admin_sup,ssl_alert,
          ssl_app,ssl_certificate,ssl_cipher,ssl_cipher_format,
          ssl_client_session_cache_db,ssl_config,ssl_connection_sup,ssl_crl,
          ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,ssl_dh_groups,
          ssl_dist_admin_sup,ssl_dist_connection_sup,ssl_dist_sup,
          ssl_gen_statem,ssl_handshake,ssl_listen_tracker_sup,ssl_logger,
          ssl_manager,ssl_pem_cache,ssl_pkix_db,ssl_record,
          ssl_server_session_cache,ssl_server_session_cache_db,
          ssl_server_session_cache_sup,ssl_session,ssl_session_cache_api,
          ssl_srp_primes,ssl_sup,ssl_upgrade_server_session_cache_sup,
          tls_bloom_filter,tls_client_ticket_store,tls_connection,
          tls_connection_1_3,tls_connection_sup,tls_dist_server_sup,
          tls_dist_sup,tls_dtls_connection,tls_dyn_connection_sup,
          tls_gen_connection,tls_handshake,tls_handshake_1_3,tls_record,
          tls_record_1_3,tls_sender,tls_server_session_ticket,
          tls_server_session_ticket_sup,tls_server_sup,tls_socket,tls_sup,
          tls_v1]},
     {path,["$ERTS_LIB_DIR/tools-3.5.3/ebin"]},
     {primLoad,
         [cover,cprof,eprof,fprof,instrument,lcnt,make,tags,xref,xref_base,
          xref_compiler,xref_parser,xref_reader,xref_scanner,xref_utils]},
     {path,["$ROOT/lib/jsx-3.1.0/ebin"]},
     {primLoad,
         [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,jsx_parser,
          jsx_to_json,jsx_to_term,jsx_verify]},
     {path,["$ROOT/lib/recon-2.5.1/ebin"]},
     {primLoad,[recon,recon_alloc,recon_lib,recon_map,recon_rec,recon_trace]},
     {path,["$ROOT/lib/credentials_obfuscation-3.1.0/ebin"]},
     {primLoad,
         [credentials_obfuscation,credentials_obfuscation_app,
          credentials_obfuscation_pbe,credentials_obfuscation_sup,
          credentials_obfuscation_svc]},
     {path,["$ROOT/lib/rabbit_common-3.8.35/ebin"]},
     {primLoad,
         [app_utils,code_version,credit_flow,delegate,delegate_sup,
          file_handle_cache,file_handle_cache_stats,gen_server2,
          lager_forwarder_backend,mirrored_supervisor,
          mirrored_supervisor_locks,mnesia_sync,pmon,priority_queue,
          rabbit_amqp_connection,rabbit_amqqueue_common,
          rabbit_auth_backend_dummy,rabbit_auth_mechanism,
          rabbit_authn_backend,rabbit_authz_backend,rabbit_basic_common,
          rabbit_binary_generator,rabbit_binary_parser,rabbit_cert_info,
          rabbit_channel_common,rabbit_command_assembler,rabbit_control_misc,
          rabbit_core_metrics,rabbit_data_coercion,rabbit_env,
          rabbit_error_logger_handler,rabbit_event,rabbit_exchange_type,
          rabbit_framing_amqp_0_8,rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
          rabbit_http_util,rabbit_json,rabbit_log,rabbit_log_ra_shim,
          rabbit_misc,rabbit_msg_store_index,rabbit_net,rabbit_nodes_common,
          rabbit_numerical,rabbit_password_hashing,rabbit_pbe,
          rabbit_peer_discovery_backend,rabbit_policy_validator,
          rabbit_queue_collector,rabbit_registry,rabbit_registry_class,
          rabbit_resource_monitor_misc,rabbit_runtime,
          rabbit_runtime_parameter,rabbit_semver,rabbit_semver_parser,
          rabbit_ssl_options,rabbit_types,rabbit_writer,supervisor2,
          vm_memory_monitor,worker_pool,worker_pool_sup,worker_pool_worker]},
     {path,["$ROOT/lib/amqp_client-3.8.35/ebin"]},
     {primLoad,
         [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
          amqp_channel_sup_sup,amqp_channels_manager,amqp_client,
          amqp_connection,amqp_connection_sup,amqp_connection_type_sup,
          amqp_direct_connection,amqp_direct_consumer,amqp_gen_connection,
          amqp_gen_consumer,amqp_main_reader,amqp_network_connection,
          amqp_rpc_client,amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
          amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,uri_parser]},
     {path,["$ROOT/lib/amqp-1.6.0/ebin"]},
     {primLoad,
         ['Elixir.AMQP','Elixir.AMQP.Application','Elixir.AMQP.Basic',
          'Elixir.AMQP.BasicError','Elixir.AMQP.Channel',
          'Elixir.AMQP.Channel.Receiver',
          'Elixir.AMQP.Channel.ReceiverManager','Elixir.AMQP.Confirm',
          'Elixir.AMQP.Connection','Elixir.AMQP.Core',
          'Elixir.AMQP.DirectConsumer','Elixir.AMQP.Exchange',
          'Elixir.AMQP.Queue','Elixir.AMQP.Utils']},
     {path,["$ROOT/lib/eex-1.14.0/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError']},
     {path,["$ROOT/lib/mime-2.0.3/ebin"]},
     {primLoad,['Elixir.MIME']},
     {path,["$ROOT/lib/plug_crypto-1.2.3/ebin"]},
     {primLoad,
         ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
          'Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier']},
     {path,["$ROOT/lib/telemetry-1.1.0/ebin"]},
     {primLoad,
         [telemetry,telemetry_app,telemetry_handler_table,telemetry_sup]},
     {path,["$ROOT/lib/plug-1.13.6/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy2','Elixir.Plug.Adapters.Test.Conn',
          'Elixir.Plug.Application','Elixir.Plug.BadRequestError',
          'Elixir.Plug.BasicAuth','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
          'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
          'Elixir.Plug.HTML','Elixir.Plug.Head','Elixir.Plug.Logger',
          'Elixir.Plug.MIME','Elixir.Plug.MethodOverride',
          'Elixir.Plug.Parsers','Elixir.Plug.Parsers.BadEncodingError',
          'Elixir.Plug.Parsers.JSON','Elixir.Plug.Parsers.MULTIPART',
          'Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
          'Elixir.Plug.Router','Elixir.Plug.Router.InvalidSpecError',
          'Elixir.Plug.Router.MalformedURIError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Telemetry',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError',plug_multipart]},
     {path,["$ROOT/lib/phoenix_pubsub-2.1.1/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.PubSub','Elixir.Phoenix.PubSub.Adapter',
          'Elixir.Phoenix.PubSub.Application',
          'Elixir.Phoenix.PubSub.BroadcastError','Elixir.Phoenix.PubSub.PG2',
          'Elixir.Phoenix.PubSub.PG2Worker',
          'Elixir.Phoenix.PubSub.Supervisor','Elixir.Phoenix.Tracker',
          'Elixir.Phoenix.Tracker.Clock',
          'Elixir.Phoenix.Tracker.DeltaGeneration',
          'Elixir.Phoenix.Tracker.Replica','Elixir.Phoenix.Tracker.Shard',
          'Elixir.Phoenix.Tracker.State']},
     {path,["$ROOT/lib/phoenix_view-1.1.2/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.Template','Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.ExsEngine',
          'Elixir.Phoenix.Template.UndefinedError','Elixir.Phoenix.View']},
     {path,["$ROOT/lib/castore-0.1.18/ebin"]},
     {primLoad,['Elixir.CAStore']},
     {path,["$ROOT/lib/phoenix-1.6.13/ebin"]},
     {primLoad,
         ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
          'Elixir.Mix.Phoenix.Schema','Elixir.Mix.Tasks.Compile.Phoenix',
          'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
          'Elixir.Mix.Tasks.Phx.Digest.Clean','Elixir.Mix.Tasks.Phx.Gen',
          'Elixir.Mix.Tasks.Phx.Gen.Auth',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.HashingLibrary',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.Injector',
          'Elixir.Mix.Tasks.Phx.Gen.Auth.Migration',
          'Elixir.Mix.Tasks.Phx.Gen.Cert','Elixir.Mix.Tasks.Phx.Gen.Channel',
          'Elixir.Mix.Tasks.Phx.Gen.Context',
          'Elixir.Mix.Tasks.Phx.Gen.Embedded','Elixir.Mix.Tasks.Phx.Gen.Html',
          'Elixir.Mix.Tasks.Phx.Gen.Json','Elixir.Mix.Tasks.Phx.Gen.Live',
          'Elixir.Mix.Tasks.Phx.Gen.Notifier',
          'Elixir.Mix.Tasks.Phx.Gen.Presence',
          'Elixir.Mix.Tasks.Phx.Gen.Release',
          'Elixir.Mix.Tasks.Phx.Gen.Schema','Elixir.Mix.Tasks.Phx.Gen.Secret',
          'Elixir.Mix.Tasks.Phx.Gen.Socket','Elixir.Mix.Tasks.Phx.Routes',
          'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
          'Elixir.Phoenix.ActionClauseError','Elixir.Phoenix.Channel',
          'Elixir.Phoenix.Channel.Server','Elixir.Phoenix.ChannelTest',
          'Elixir.Phoenix.ChannelTest.NoopSerializer',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.CodeReloader.Proxy',
          'Elixir.Phoenix.CodeReloader.Server','Elixir.Phoenix.Config',
          'Elixir.Phoenix.ConnTest','Elixir.Phoenix.Controller',
          'Elixir.Phoenix.Controller.Pipeline','Elixir.Phoenix.Digester',
          'Elixir.Phoenix.Digester.Compressor','Elixir.Phoenix.Digester.Gzip',
          'Elixir.Phoenix.Endpoint','Elixir.Phoenix.Endpoint.Cowboy2Adapter',
          'Elixir.Phoenix.Endpoint.Cowboy2Handler',
          'Elixir.Phoenix.Endpoint.RenderErrors',
          'Elixir.Phoenix.Endpoint.Supervisor',
          'Elixir.Phoenix.Endpoint.Watcher','Elixir.Phoenix.Logger',
          'Elixir.Phoenix.MissingParamError','Elixir.Phoenix.Naming',
          'Elixir.Phoenix.NotAcceptableError','Elixir.Phoenix.Param',
          'Elixir.Phoenix.Param.Any','Elixir.Phoenix.Param.Atom',
          'Elixir.Phoenix.Param.BitString','Elixir.Phoenix.Param.Float',
          'Elixir.Phoenix.Param.Integer','Elixir.Phoenix.Param.Map',
          'Elixir.Phoenix.Presence','Elixir.Phoenix.Presence.Tracker',
          'Elixir.Phoenix.Router','Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Helpers',
          'Elixir.Phoenix.Router.MalformedURIError',
          'Elixir.Phoenix.Router.NoRouteError',
          'Elixir.Phoenix.Router.Resource','Elixir.Phoenix.Router.Route',
          'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Broadcast',
          'Elixir.Phoenix.Socket.InvalidMessageError',
          'Elixir.Phoenix.Socket.Message',
          'Elixir.Phoenix.Socket.PoolSupervisor',
          'Elixir.Phoenix.Socket.Reply','Elixir.Phoenix.Socket.Serializer',
          'Elixir.Phoenix.Socket.Transport',
          'Elixir.Phoenix.Socket.V1.JSONSerializer',
          'Elixir.Phoenix.Socket.V2.JSONSerializer','Elixir.Phoenix.Token',
          'Elixir.Phoenix.Transports.LongPoll',
          'Elixir.Phoenix.Transports.LongPoll.Server',
          'Elixir.Phoenix.Transports.WebSocket',
          'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
     {path,["$ROOT/lib/connection-1.1.0/ebin"]},
     {primLoad,['Elixir.Connection']},
     {path,["$ROOT/lib/db_connection-2.4.2/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.ConnectionPool',
          'Elixir.DBConnection.ConnectionPool.Pool',
          'Elixir.DBConnection.EncodeError','Elixir.DBConnection.Holder',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.OwnershipError',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Stream','Elixir.DBConnection.Task',
          'Elixir.DBConnection.TransactionError',
          'Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,["$ROOT/lib/decimal-2.0.0/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Decimal.Macros','Elixir.Inspect.Decimal',
          'Elixir.String.Chars.Decimal']},
     {path,["$ROOT/lib/ecto-3.9.0/ebin"]},
     {primLoad,
         ['Elixir.Ecto','Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Queryable',
          'Elixir.Ecto.Adapter.Schema','Elixir.Ecto.Adapter.Storage',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.Embedded','Elixir.Ecto.Enum',
          'Elixir.Ecto.InvalidChangesetError','Elixir.Ecto.InvalidURLError',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
          'Elixir.Ecto.MultiplePrimaryKeyError',
          'Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
          'Elixir.Ecto.Query.API','Elixir.Ecto.Query.BooleanExpr',
          'Elixir.Ecto.Query.Builder','Elixir.Ecto.Query.Builder.CTE',
          'Elixir.Ecto.Query.Builder.Combination',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update',
          'Elixir.Ecto.Query.Builder.Windows','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.FromExpr','Elixir.Ecto.Query.JoinExpr',
          'Elixir.Ecto.Query.Planner','Elixir.Ecto.Query.QueryExpr',
          'Elixir.Ecto.Query.SelectExpr','Elixir.Ecto.Query.Tagged',
          'Elixir.Ecto.Query.WindowAPI','Elixir.Ecto.Query.WithExpr',
          'Elixir.Ecto.QueryError','Elixir.Ecto.Queryable',
          'Elixir.Ecto.Queryable.Atom','Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
          'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Repo.Transaction',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Loader',
          'Elixir.Ecto.Schema.Metadata','Elixir.Ecto.StaleEntryError',
          'Elixir.Ecto.SubQuery','Elixir.Ecto.SubQueryError',
          'Elixir.Ecto.Type','Elixir.Ecto.UUID',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata',
          'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Jason.Encoder.Ecto.Schema.Metadata','Elixir.Mix.Ecto',
          'Elixir.Mix.Tasks.Ecto','Elixir.Mix.Tasks.Ecto.Create',
          'Elixir.Mix.Tasks.Ecto.Drop','Elixir.Mix.Tasks.Ecto.Gen.Repo']},
     {path,["$ROOT/lib/ecto_sql-3.9.0/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
          'Elixir.Ecto.Adapter.Migration','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapters.MyXQL','Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Application',
          'Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Adapters.Tds',
          'Elixir.Ecto.Migration','Elixir.Ecto.Migration.Command',
          'Elixir.Ecto.Migration.Constraint','Elixir.Ecto.Migration.Index',
          'Elixir.Ecto.Migration.Reference','Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
          'Elixir.Enumerable.Ecto.Adapters.SQL.Stream','Elixir.Mix.EctoSQL',
          'Elixir.Mix.Tasks.Ecto.Dump','Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Load','Elixir.Mix.Tasks.Ecto.Migrate',
          'Elixir.Mix.Tasks.Ecto.Migrations',
          'Elixir.Mix.Tasks.Ecto.Rollback']},
     {path,["$ROOT/lib/postgrex-0.16.5/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.Enumerable.Postgrex.Stream',
          'Elixir.Inspect.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
          'Elixir.Postgrex.Cursor','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText',
          'Elixir.Postgrex.Extensions.Xid8','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Notifications','Elixir.Postgrex.Parameters',
          'Elixir.Postgrex.Path','Elixir.Postgrex.Point',
          'Elixir.Postgrex.Polygon','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Query','Elixir.Postgrex.QueryError',
          'Elixir.Postgrex.Range','Elixir.Postgrex.ReplicationConnection',
          'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
          'Elixir.Postgrex.SimpleConnection','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeModule','Elixir.Postgrex.TypeServer',
          'Elixir.Postgrex.TypeSupervisor','Elixir.Postgrex.Types',
          'Elixir.Postgrex.Utils','Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query']},
     {path,["$ROOT/lib/phoenix_html-3.2.0/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Atom',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.Format','Elixir.Phoenix.HTML.Link',
          'Elixir.Phoenix.HTML.Safe','Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Tag']},
     {path,["$ROOT/lib/phoenix_live_view-0.18.1/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveView.Socket',
          'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
          'Elixir.Inspect.Phoenix.LiveViewTest.Element',
          'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
          'Elixir.Inspect.Phoenix.LiveViewTest.View',
          'Elixir.Phoenix.Component','Elixir.Phoenix.Component.Declarative',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.JS',
          'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveComponent','Elixir.Phoenix.LiveComponent.CID',
          'Elixir.Phoenix.LiveView','Elixir.Phoenix.LiveView.Application',
          'Elixir.Phoenix.LiveView.Channel',
          'Elixir.Phoenix.LiveView.Component',
          'Elixir.Phoenix.LiveView.Comprehension',
          'Elixir.Phoenix.LiveView.Controller','Elixir.Phoenix.LiveView.Diff',
          'Elixir.Phoenix.LiveView.Engine',
          'Elixir.Phoenix.LiveView.HTMLAlgebra',
          'Elixir.Phoenix.LiveView.HTMLEngine',
          'Elixir.Phoenix.LiveView.HTMLFormatter',
          'Elixir.Phoenix.LiveView.HTMLTokenizer',
          'Elixir.Phoenix.LiveView.HTMLTokenizer.ParseError',
          'Elixir.Phoenix.LiveView.Helpers','Elixir.Phoenix.LiveView.JS',
          'Elixir.Phoenix.LiveView.Lifecycle',
          'Elixir.Phoenix.LiveView.Logger','Elixir.Phoenix.LiveView.Plug',
          'Elixir.Phoenix.LiveView.Rendered',
          'Elixir.Phoenix.LiveView.Renderer','Elixir.Phoenix.LiveView.Route',
          'Elixir.Phoenix.LiveView.Router','Elixir.Phoenix.LiveView.Session',
          'Elixir.Phoenix.LiveView.Socket',
          'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
          'Elixir.Phoenix.LiveView.Static','Elixir.Phoenix.LiveView.Upload',
          'Elixir.Phoenix.LiveView.UploadChannel',
          'Elixir.Phoenix.LiveView.UploadConfig',
          'Elixir.Phoenix.LiveView.UploadEntry',
          'Elixir.Phoenix.LiveView.Utils','Elixir.Phoenix.LiveViewTest',
          'Elixir.Phoenix.LiveViewTest.ClientProxy',
          'Elixir.Phoenix.LiveViewTest.DOM',
          'Elixir.Phoenix.LiveViewTest.Element',
          'Elixir.Phoenix.LiveViewTest.Upload',
          'Elixir.Phoenix.LiveViewTest.UploadClient',
          'Elixir.Phoenix.LiveViewTest.View',
          'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
     {path,["$ROOT/lib/telemetry_metrics-0.6.1/ebin"]},
     {primLoad,
         ['Elixir.Telemetry.Metrics',
          'Elixir.Telemetry.Metrics.ConsoleReporter',
          'Elixir.Telemetry.Metrics.Counter',
          'Elixir.Telemetry.Metrics.Distribution',
          'Elixir.Telemetry.Metrics.LastValue','Elixir.Telemetry.Metrics.Sum',
          'Elixir.Telemetry.Metrics.Summary']},
     {path,["$ROOT/lib/phoenix_live_dashboard-0.7.0/ebin"]},
     {primLoad,
         ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard',
          'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
          'Elixir.Phoenix.LiveDashboard.Application',
          'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
          'Elixir.Phoenix.LiveDashboard.CardComponent',
          'Elixir.Phoenix.LiveDashboard.ChartComponent',
          'Elixir.Phoenix.LiveDashboard.ColumnsComponent',
          'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
          'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
          'Elixir.Phoenix.LiveDashboard.EtsPage',
          'Elixir.Phoenix.LiveDashboard.FieldsCardComponent',
          'Elixir.Phoenix.LiveDashboard.Helpers',
          'Elixir.Phoenix.LiveDashboard.HomePage',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Arrow',
          'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Circle',
          'Elixir.Phoenix.LiveDashboard.LayoutView',
          'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
          'Elixir.Phoenix.LiveDashboard.MetricsPage',
          'Elixir.Phoenix.LiveDashboard.ModalComponent',
          'Elixir.Phoenix.LiveDashboard.NavBarComponent',
          'Elixir.Phoenix.LiveDashboard.OSMonPage',
          'Elixir.Phoenix.LiveDashboard.PageBuilder',
          'Elixir.Phoenix.LiveDashboard.PageLive',
          'Elixir.Phoenix.LiveDashboard.PageNotFound',
          'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
          'Elixir.Phoenix.LiveDashboard.PortsPage',
          'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
          'Elixir.Phoenix.LiveDashboard.ProcessesPage',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
          'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
          'Elixir.Phoenix.LiveDashboard.RequestLogger',
          'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
          'Elixir.Phoenix.LiveDashboard.Router',
          'Elixir.Phoenix.LiveDashboard.RowComponent',
          'Elixir.Phoenix.LiveDashboard.SharedUsageCardComponent',
          'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
          'Elixir.Phoenix.LiveDashboard.SocketsPage',
          'Elixir.Phoenix.LiveDashboard.SystemInfo',
          'Elixir.Phoenix.LiveDashboard.SystemInfo.PortDetails',
          'Elixir.Phoenix.LiveDashboard.SystemInfo.ProcessDetails',
          'Elixir.Phoenix.LiveDashboard.TableComponent',
          'Elixir.Phoenix.LiveDashboard.TelemetryListener',
          'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
          'Elixir.Phoenix.LiveDashboard.UsageCardComponent',
          'Elixir.Phoenix.LiveDashboard.Web']},
     {path,["$ROOT/lib/esbuild-0.5.0/ebin"]},
     {primLoad,
         ['Elixir.Esbuild','Elixir.Mix.Tasks.Esbuild',
          'Elixir.Mix.Tasks.Esbuild.Install']},
     {path,["$ROOT/lib/jason-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Jason.OrderedObject','Elixir.Jason',
          'Elixir.Jason.Codegen','Elixir.Jason.DecodeError',
          'Elixir.Jason.Decoder','Elixir.Jason.Decoder.Unescape',
          'Elixir.Jason.Encode','Elixir.Jason.EncodeError',
          'Elixir.Jason.Encoder','Elixir.Jason.Encoder.Any',
          'Elixir.Jason.Encoder.Atom','Elixir.Jason.Encoder.BitString',
          'Elixir.Jason.Encoder.Date','Elixir.Jason.Encoder.DateTime',
          'Elixir.Jason.Encoder.Decimal','Elixir.Jason.Encoder.Float',
          'Elixir.Jason.Encoder.Integer',
          'Elixir.Jason.Encoder.Jason.Fragment',
          'Elixir.Jason.Encoder.Jason.OrderedObject',
          'Elixir.Jason.Encoder.List','Elixir.Jason.Encoder.Map',
          'Elixir.Jason.Encoder.NaiveDateTime','Elixir.Jason.Encoder.Time',
          'Elixir.Jason.Formatter','Elixir.Jason.Fragment',
          'Elixir.Jason.Helpers','Elixir.Jason.OrderedObject',
          'Elixir.Jason.Sigil']},
     {path,["$ROOT/lib/swoosh-1.8.0/ebin"]},
     {primLoad,
         ['Elixir.Mix.Tasks.Swoosh.Mailbox.Server',
          'Elixir.Plug.Swoosh.MailboxPreview','Elixir.Swoosh',
          'Elixir.Swoosh.Adapter','Elixir.Swoosh.Adapters.AmazonSES',
          'Elixir.Swoosh.Adapters.Dyn',
          'Elixir.Swoosh.Adapters.ExAwsAmazonSES',
          'Elixir.Swoosh.Adapters.Gmail','Elixir.Swoosh.Adapters.Local',
          'Elixir.Swoosh.Adapters.Local.Storage.Manager',
          'Elixir.Swoosh.Adapters.Local.Storage.Memory',
          'Elixir.Swoosh.Adapters.Logger','Elixir.Swoosh.Adapters.MailPace',
          'Elixir.Swoosh.Adapters.Mailgun','Elixir.Swoosh.Adapters.Mailjet',
          'Elixir.Swoosh.Adapters.Mandrill','Elixir.Swoosh.Adapters.OhMySmtp',
          'Elixir.Swoosh.Adapters.Postmark','Elixir.Swoosh.Adapters.SMTP',
          'Elixir.Swoosh.Adapters.SMTP.Helpers',
          'Elixir.Swoosh.Adapters.SMTP2GO','Elixir.Swoosh.Adapters.Sendgrid',
          'Elixir.Swoosh.Adapters.Sendinblue',
          'Elixir.Swoosh.Adapters.Sendmail',
          'Elixir.Swoosh.Adapters.SocketLabs',
          'Elixir.Swoosh.Adapters.SparkPost','Elixir.Swoosh.Adapters.Test',
          'Elixir.Swoosh.Adapters.XML.Helpers','Elixir.Swoosh.ApiClient',
          'Elixir.Swoosh.ApiClient.Finch','Elixir.Swoosh.ApiClient.Hackney',
          'Elixir.Swoosh.Application','Elixir.Swoosh.Attachment',
          'Elixir.Swoosh.AttachmentContentError',
          'Elixir.Swoosh.DeliveryError','Elixir.Swoosh.Email',
          'Elixir.Swoosh.Email.Recipient','Elixir.Swoosh.Email.Recipient.Any',
          'Elixir.Swoosh.Email.Recipient.BitString',
          'Elixir.Swoosh.Email.Recipient.Tuple','Elixir.Swoosh.Email.Render',
          'Elixir.Swoosh.Mailer','Elixir.Swoosh.TestAssertions']},
     {path,["$ROOT/lib/telemetry_poller-1.0.0/ebin"]},
     {primLoad,
         [telemetry_poller,telemetry_poller_app,telemetry_poller_builtin,
          telemetry_poller_sup]},
     {path,["$ROOT/lib/gettext-0.20.0/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation',
          'Elixir.Gettext.Interpolation.Default','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.PO',
          'Elixir.Gettext.PO.Parser','Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Gettext.PluralFormError','Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,["$ROOT/lib/ranch-1.8.0/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_crc32c,ranch_listener_sup,ranch_protocol,ranch_proxy_header,
          ranch_server,ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowlib-2.11.0/ebin"]},
     {primLoad,
         [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,cow_http2,
          cow_http2_machine,cow_http_hd,cow_http_struct_hd,cow_http_te,
          cow_iolists,cow_link,cow_mimetypes,cow_multipart,cow_qs,cow_spdy,
          cow_sse,cow_uri,cow_uri_template,cow_ws]},
     {path,["$ROOT/lib/cowboy-2.9.0/ebin"]},
     {primLoad,
         [cowboy,cowboy_app,cowboy_bstr,cowboy_children,cowboy_clear,
          cowboy_clock,cowboy_compress_h,cowboy_constraints,cowboy_handler,
          cowboy_http,cowboy_http2,cowboy_loop,cowboy_metrics_h,
          cowboy_middleware,cowboy_req,cowboy_rest,cowboy_router,
          cowboy_static,cowboy_stream,cowboy_stream_h,cowboy_sub_protocol,
          cowboy_sup,cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
     {path,["$ROOT/lib/cowboy_telemetry-0.4.0/ebin"]},
     {primLoad,[cowboy_telemetry_h]},
     {path,["$ROOT/lib/plug_cowboy-2.5.2/ebin"]},
     {primLoad,
         ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
          'Elixir.Plug.Cowboy.Drainer','Elixir.Plug.Cowboy.Handler',
          'Elixir.Plug.Cowboy.Translator']},
     {path,["$ROOT/lib/secure_random-0.5.1/ebin"]},
     {primLoad,['Elixir.SecureRandom']},
     {path,["$ROOT/lib/phoenix_ecto-4.4.0/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.Ecto','Elixir.Phoenix.Ecto.CheckRepoStatus',
          'Elixir.Phoenix.Ecto.PendingMigrationError',
          'Elixir.Phoenix.Ecto.SQL.Sandbox',
          'Elixir.Phoenix.Ecto.SQL.SandboxSession',
          'Elixir.Phoenix.Ecto.StorageNotCreatedError',
          'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
          'Elixir.Phoenix.HTML.Safe.Decimal',
          'Elixir.Plug.Exception.Ecto.CastError',
          'Elixir.Plug.Exception.Ecto.NoResultsError',
          'Elixir.Plug.Exception.Ecto.Query.CastError',
          'Elixir.Plug.Exception.Ecto.StaleEntryError',
          'Elixir.Plug.Exception.Ecto.SubQueryError',
          'Elixir.Plug.Exception.Phoenix.Ecto.PendingMigrationError',
          'Elixir.Plug.Exception.Phoenix.Ecto.StorageNotCreatedError']},
     {path,["$ROOT/lib/payments-0.1.0/ebin"]},
     {primLoad,
         ['Elixir.Messages.Sender','Elixir.Payments',
          'Elixir.Payments.Application','Elixir.Payments.Mailer',
          'Elixir.Payments.Repo','Elixir.Payments.Transactions',
          'Elixir.Payments.Transactions.Order','Elixir.PaymentsWeb',
          'Elixir.PaymentsWeb.ChangesetView','Elixir.PaymentsWeb.Endpoint',
          'Elixir.PaymentsWeb.ErrorHelpers','Elixir.PaymentsWeb.ErrorView',
          'Elixir.PaymentsWeb.FallbackController',
          'Elixir.PaymentsWeb.Gettext','Elixir.PaymentsWeb.OrderController',
          'Elixir.PaymentsWeb.OrderView','Elixir.PaymentsWeb.Router',
          'Elixir.PaymentsWeb.Router.Helpers','Elixir.PaymentsWeb.Telemetry']},
     {progress,modules_loaded},
     {path,
         ["$ERTS_LIB_DIR/kernel-8.5.1/ebin","$ERTS_LIB_DIR/stdlib-4.1.1/ebin",
          "$ERTS_LIB_DIR/compiler-8.2.1/ebin","$ROOT/lib/elixir-1.14.0/ebin",
          "$ROOT/lib/mix-1.14.0/ebin","$ROOT/lib/artificery-0.4.3/ebin",
          "$ERTS_LIB_DIR/runtime_tools-1.19/ebin",
          "$ROOT/lib/distillery-2.1.1/ebin","$ERTS_LIB_DIR/sasl-4.2/ebin",
          "$ROOT/lib/iex-1.14.0/ebin","$ROOT/lib/logger-1.14.0/ebin",
          "$ERTS_LIB_DIR/syntax_tools-3.0/ebin",
          "$ROOT/lib/goldrush-0.1.9/ebin","$ROOT/lib/lager-3.9.2/ebin",
          "$ERTS_LIB_DIR/xmerl-1.3.30/ebin","$ERTS_LIB_DIR/crypto-5.1.2/ebin",
          "$ERTS_LIB_DIR/asn1-5.0.21/ebin",
          "$ERTS_LIB_DIR/public_key-1.13.1/ebin",
          "$ERTS_LIB_DIR/ssl-10.8.5/ebin","$ERTS_LIB_DIR/tools-3.5.3/ebin",
          "$ROOT/lib/jsx-3.1.0/ebin","$ROOT/lib/recon-2.5.1/ebin",
          "$ROOT/lib/credentials_obfuscation-3.1.0/ebin",
          "$ROOT/lib/rabbit_common-3.8.35/ebin",
          "$ROOT/lib/amqp_client-3.8.35/ebin","$ROOT/lib/amqp-1.6.0/ebin",
          "$ROOT/lib/eex-1.14.0/ebin","$ROOT/lib/mime-2.0.3/ebin",
          "$ROOT/lib/plug_crypto-1.2.3/ebin","$ROOT/lib/telemetry-1.1.0/ebin",
          "$ROOT/lib/plug-1.13.6/ebin","$ROOT/lib/phoenix_pubsub-2.1.1/ebin",
          "$ROOT/lib/phoenix_view-1.1.2/ebin","$ROOT/lib/castore-0.1.18/ebin",
          "$ROOT/lib/phoenix-1.6.13/ebin","$ROOT/lib/connection-1.1.0/ebin",
          "$ROOT/lib/db_connection-2.4.2/ebin","$ROOT/lib/decimal-2.0.0/ebin",
          "$ROOT/lib/ecto-3.9.0/ebin","$ROOT/lib/ecto_sql-3.9.0/ebin",
          "$ROOT/lib/postgrex-0.16.5/ebin",
          "$ROOT/lib/phoenix_html-3.2.0/ebin",
          "$ROOT/lib/phoenix_live_view-0.18.1/ebin",
          "$ROOT/lib/telemetry_metrics-0.6.1/ebin",
          "$ROOT/lib/phoenix_live_dashboard-0.7.0/ebin",
          "$ROOT/lib/esbuild-0.5.0/ebin","$ROOT/lib/jason-1.4.0/ebin",
          "$ROOT/lib/swoosh-1.8.0/ebin",
          "$ROOT/lib/telemetry_poller-1.0.0/ebin",
          "$ROOT/lib/gettext-0.20.0/ebin","$ROOT/lib/ranch-1.8.0/ebin",
          "$ROOT/lib/cowlib-2.11.0/ebin","$ROOT/lib/cowboy-2.9.0/ebin",
          "$ROOT/lib/cowboy_telemetry-0.4.0/ebin",
          "$ROOT/lib/plug_cowboy-2.5.2/ebin",
          "$ROOT/lib/secure_random-0.5.1/ebin",
          "$ROOT/lib/phoenix_ecto-4.4.0/ebin",
          "$ROOT/lib/payments-0.1.0/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,logger,{logger_server,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.5.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_compile_server,erl_distribution,
                        erl_erts_errors,erl_reply,erl_kernel_errors,
                        erl_signal_handler,erpc,error_handler,error_logger,
                        file,file_server,file_io_server,global,global_group,
                        global_search,group,group_history,heart,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,kernel_refc,local_tcp,local_udp,logger,
                        logger_backend,logger_config,logger_disk_log_h,
                        logger_filters,logger_formatter,logger_h_common,
                        logger_handler_watcher,logger_olp,logger_proxy,
                        logger_server,logger_simple_h,logger_std_h,logger_sup,
                        net,net_adm,net_kernel,os,ram_file,rpc,user,user_drv,
                        user_sup,disk_log,disk_log_1,disk_log_server,
                        disk_log_sup,dist_ac,erl_ddll,erl_epmd,erts_debug,
                        gen_tcp,gen_tcp_socket,gen_udp,gen_udp_socket,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg,pg2,raw_file_io,
                        raw_file_io_compressed,raw_file_io_deflate,
                        raw_file_io_delayed,raw_file_io_inflate,
                        raw_file_io_list,seq_trace,socket,standard_error,
                        wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_refc,kernel_sup,logger,
                        logger_handler_watcher,logger_sup,net_kernel,net_sup,
                        rex,user,os_server,ddll_server,erl_epmd,inet_db,pg]},
                   {applications,[]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger_level,notice},
                        {logger_sasl_compatible,false},
                        {net_tickintensity,4},
                        {net_ticktime,60},
                        {prevent_overlapping_partitions,true},
                        {shell_docs_ansi,auto}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {kernelProcess,'Elixir.Distillery.Releases.Runtime.Pidfile',
         {'Elixir.Distillery.Releases.Runtime.Pidfile',start,[]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"4.1.1"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v9,dict,digraph,
                        digraph_utils,edlin,edlin_expand,epp,eval_bits,
                        erl_abstract_code,erl_anno,erl_bits,erl_compile,
                        erl_error,erl_eval,erl_expand_records,erl_features,
                        erl_internal,erl_lint,erl_parse,erl_posix_msg,erl_pp,
                        erl_scan,erl_stdlib_errors,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,peer,pool,proc_lib,proplists,qlc,qlc_pt,
                        queue,rand,random,re,sets,shell,shell_default,
                        shell_docs,slave,sofs,string,supervisor,
                        supervisor_bridge,sys,timer,unicode,unicode_util,
                        uri_string,win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"8.2.1"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_bounds,beam_block,
                        beam_call_types,beam_clean,beam_dict,beam_digraph,
                        beam_disasm,beam_flatten,beam_jump,beam_kernel_to_ssa,
                        beam_listing,beam_opcodes,beam_ssa,beam_ssa_bc_size,
                        beam_ssa_bool,beam_ssa_bsm,beam_ssa_codegen,
                        beam_ssa_dead,beam_ssa_lint,beam_ssa_opt,beam_ssa_pp,
                        beam_ssa_pre_codegen,beam_ssa_recv,beam_ssa_share,
                        beam_ssa_throw,beam_ssa_type,beam_trim,beam_types,
                        beam_utils,beam_validator,beam_z,cerl,cerl_clauses,
                        cerl_inline,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_alias,sys_core_bsm,sys_core_fold,
                        sys_core_fold_lists,sys_core_inline,sys_core_prepare,
                        sys_messages,sys_pre_attributes,v3_core,v3_kernel,
                        v3_kernel_pp]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent.Server','Elixir.Agent',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise',
                        'Elixir.Calendar.ISO',
                        'Elixir.Calendar.TimeZoneDatabase',
                        'Elixir.Calendar.UTCOnlyTimeZoneDatabase',
                        'Elixir.Calendar','Elixir.CaseClauseError',
                        'Elixir.Code.Formatter','Elixir.Code.Fragment',
                        'Elixir.Code.Identifier','Elixir.Code.LoadError',
                        'Elixir.Code.Normalizer','Elixir.Code.Typespec',
                        'Elixir.Code','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.Collectable',
                        'Elixir.CompileError','Elixir.CondClauseError',
                        'Elixir.Config.Provider','Elixir.Config.Reader',
                        'Elixir.Config','Elixir.Date.Range','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict',
                        'Elixir.DynamicSupervisor','Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enum',
                        'Elixir.Enumerable.Date.Range',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.Enumerable',
                        'Elixir.ErlangError','Elixir.Exception',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.LinkError','Elixir.File.RenameError',
                        'Elixir.File.Stat','Elixir.File.Stream','Elixir.File',
                        'Elixir.Float','Elixir.Function',
                        'Elixir.FunctionClauseError','Elixir.GenEvent.Stream',
                        'Elixir.GenEvent','Elixir.GenServer',
                        'Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence',
                        'Elixir.IO.ANSI','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.IO',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date.Range','Elixir.Inspect.Date',
                        'Elixir.Inspect.DateTime','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Inspect.Error',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Macro.Env','Elixir.Inspect.Map',
                        'Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.URI',
                        'Elixir.Inspect.Version.Requirement',
                        'Elixir.Inspect.Version','Elixir.Inspect',
                        'Elixir.Integer','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.Kernel',
                        'Elixir.KeyError','Elixir.Keyword',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.List.Chars',
                        'Elixir.List','Elixir.Macro.Env','Elixir.Macro',
                        'Elixir.Map','Elixir.MapSet','Elixir.MatchError',
                        'Elixir.Module.LocalsTracker',
                        'Elixir.Module.ParallelChecker',
                        'Elixir.Module.Types.Error',
                        'Elixir.Module.Types.Expr',
                        'Elixir.Module.Types.Helpers',
                        'Elixir.Module.Types.Of',
                        'Elixir.Module.Types.Pattern',
                        'Elixir.Module.Types.Unify','Elixir.Module.Types',
                        'Elixir.Module','Elixir.NaiveDateTime','Elixir.Node',
                        'Elixir.OptionParser.ParseError',
                        'Elixir.OptionParser','Elixir.PartitionSupervisor',
                        'Elixir.Path.Wildcard','Elixir.Path','Elixir.Port',
                        'Elixir.Process','Elixir.Protocol.UndefinedError',
                        'Elixir.Protocol','Elixir.Range',
                        'Elixir.Record.Extractor','Elixir.Record',
                        'Elixir.Regex.CompileError','Elixir.Regex',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.Registry',
                        'Elixir.RuntimeError','Elixir.Set',
                        'Elixir.Stream.Reducers','Elixir.Stream',
                        'Elixir.String.Break','Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Chars.Version','Elixir.String.Chars',
                        'Elixir.String.Tokenizer.ScriptSet',
                        'Elixir.String.Tokenizer.Security',
                        'Elixir.String.Tokenizer','Elixir.String.Unicode',
                        'Elixir.String','Elixir.StringIO',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.Supervisor','Elixir.SyntaxError',
                        'Elixir.System.EnvError',
                        'Elixir.System.SignalHandler','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task.Supervised',
                        'Elixir.Task.Supervisor','Elixir.Task','Elixir.Time',
                        'Elixir.TokenMissingError','Elixir.TryClauseError',
                        'Elixir.Tuple','Elixir.URI.Error','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Requirement',
                        'Elixir.Version','Elixir.WithClauseError',elixir,
                        elixir_aliases,elixir_bitstring,elixir_bootstrap,
                        elixir_clauses,elixir_code_server,elixir_compiler,
                        elixir_config,elixir_def,elixir_dispatch,elixir_env,
                        elixir_erl,elixir_erl_clauses,elixir_erl_compiler,
                        elixir_erl_for,elixir_erl_pass,elixir_erl_try,
                        elixir_erl_var,elixir_errors,elixir_expand,elixir_fn,
                        elixir_import,elixir_interpolation,elixir_lexical,
                        elixir_locals,elixir_map,elixir_module,
                        elixir_overridable,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_sup,elixir_tokenizer,
                        elixir_utils]},
                   {registered,[elixir_sup,elixir_config,elixir_code_server]},
                   {applications,[compiler,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{ansi_enabled,false},
                        {ansi_syntax_colors,
                            [{atom,cyan},
                             {binary,default_color},
                             {boolean,magenta},
                             {charlist,yellow},
                             {list,default_color},
                             {map,default_color},
                             {nil,magenta},
                             {number,yellow},
                             {string,green},
                             {tuple,default_color}]},
                        {check_endianness,true},
                        {dbg_callback,{'Elixir.Macro',dbg,[]}},
                        {time_zone_database,
                            'Elixir.Calendar.UTCOnlyTimeZoneDatabase'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mix,
                  [{description,"mix"},
                   {vsn,"1.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Mix.Shell','Elixir.Mix',
                        'Elixir.Mix.CLI',
                        'Elixir.Mix.Compilers.ApplicationTracer',
                        'Elixir.Mix.Compilers.Elixir',
                        'Elixir.Mix.Compilers.Erlang',
                        'Elixir.Mix.Compilers.Test','Elixir.Mix.Config',
                        'Elixir.Mix.Dep','Elixir.Mix.Dep.Converger',
                        'Elixir.Mix.Dep.ElixirSCM','Elixir.Mix.Dep.Fetcher',
                        'Elixir.Mix.Dep.Loader','Elixir.Mix.Dep.Lock',
                        'Elixir.Mix.Dep.Umbrella',
                        'Elixir.Mix.ElixirVersionError','Elixir.Mix.Error',
                        'Elixir.Mix.Generator','Elixir.Mix.Hex',
                        'Elixir.Mix.InvalidTaskError','Elixir.Mix.Local',
                        'Elixir.Mix.Local.Installer',
                        'Elixir.Mix.NoProjectError','Elixir.Mix.NoTaskError',
                        'Elixir.Mix.Project','Elixir.Mix.ProjectStack',
                        'Elixir.Mix.PublicKey','Elixir.Mix.Rebar',
                        'Elixir.Mix.Release','Elixir.Mix.RemoteConverger',
                        'Elixir.Mix.SCM','Elixir.Mix.SCM.Git',
                        'Elixir.Mix.SCM.Path','Elixir.Mix.Shell',
                        'Elixir.Mix.Shell.IO','Elixir.Mix.Shell.Process',
                        'Elixir.Mix.Shell.Quiet','Elixir.Mix.State',
                        'Elixir.Mix.Task','Elixir.Mix.Task.Compiler',
                        'Elixir.Mix.Task.Compiler.Diagnostic',
                        'Elixir.Mix.Tasks.App.Config',
                        'Elixir.Mix.Tasks.App.Start',
                        'Elixir.Mix.Tasks.App.Tree',
                        'Elixir.Mix.Tasks.Archive',
                        'Elixir.Mix.Tasks.Archive.Build',
                        'Elixir.Mix.Tasks.Archive.Check',
                        'Elixir.Mix.Tasks.Archive.Install',
                        'Elixir.Mix.Tasks.Archive.Uninstall',
                        'Elixir.Mix.Tasks.Clean','Elixir.Mix.Tasks.Cmd',
                        'Elixir.Mix.Tasks.Compile',
                        'Elixir.Mix.Tasks.Compile.All',
                        'Elixir.Mix.Tasks.Compile.App',
                        'Elixir.Mix.Tasks.Compile.Elixir',
                        'Elixir.Mix.Tasks.Compile.Erlang',
                        'Elixir.Mix.Tasks.Compile.Leex',
                        'Elixir.Mix.Tasks.Compile.Protocols',
                        'Elixir.Mix.Tasks.Compile.Yecc',
                        'Elixir.Mix.Tasks.Deps','Elixir.Mix.Tasks.Deps.Clean',
                        'Elixir.Mix.Tasks.Deps.Compile',
                        'Elixir.Mix.Tasks.Deps.Get',
                        'Elixir.Mix.Tasks.Deps.Loadpaths',
                        'Elixir.Mix.Tasks.Deps.Precompile',
                        'Elixir.Mix.Tasks.Deps.Tree',
                        'Elixir.Mix.Tasks.Deps.Unlock',
                        'Elixir.Mix.Tasks.Deps.Update','Elixir.Mix.Tasks.Do',
                        'Elixir.Mix.Tasks.Escript',
                        'Elixir.Mix.Tasks.Escript.Build',
                        'Elixir.Mix.Tasks.Escript.Install',
                        'Elixir.Mix.Tasks.Escript.Uninstall',
                        'Elixir.Mix.Tasks.Eval','Elixir.Mix.Tasks.Format',
                        'Elixir.Mix.Tasks.Help','Elixir.Mix.Tasks.Iex',
                        'Elixir.Mix.Tasks.Loadconfig',
                        'Elixir.Mix.Tasks.Loadpaths','Elixir.Mix.Tasks.Local',
                        'Elixir.Mix.Tasks.Local.Hex',
                        'Elixir.Mix.Tasks.Local.PublicKeys',
                        'Elixir.Mix.Tasks.Local.Rebar','Elixir.Mix.Tasks.New',
                        'Elixir.Mix.Tasks.Profile.Cprof',
                        'Elixir.Mix.Tasks.Profile.Eprof',
                        'Elixir.Mix.Tasks.Profile.Fprof',
                        'Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Init',
                        'Elixir.Mix.Tasks.Run','Elixir.Mix.Tasks.Test',
                        'Elixir.Mix.Tasks.Test.Coverage',
                        'Elixir.Mix.Tasks.WillRecompile',
                        'Elixir.Mix.Tasks.Xref','Elixir.Mix.TasksServer',
                        'Elixir.Mix.Utils']},
                   {registered,
                       ['Elixir.Mix.State','Elixir.Mix.TasksServer',
                        'Elixir.Mix.ProjectStack']},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{colors,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Mix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,artificery,
                  [{description,
                       "A toolkit for terminal user interfaces in Elixir"},
                   {vsn,"0.4.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Artificery','Elixir.Artificery.Command',
                        'Elixir.Artificery.Console',
                        'Elixir.Artificery.Console.Color',
                        'Elixir.Artificery.Console.Color.ANSI',
                        'Elixir.Artificery.Console.Events',
                        'Elixir.Artificery.Console.Prompt',
                        'Elixir.Artificery.Console.Spinner',
                        'Elixir.Artificery.Console.Table',
                        'Elixir.Artificery.Entry','Elixir.Artificery.Option']},
                   {registered,[]},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.19"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,runtime_tools,
                        runtime_tools_sup,erts_alloc_config,ttb_autostart,
                        dyntrace,system_information,scheduler,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\n"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.Cookies',
                        'Elixir.Distillery.Releases.App',
                        'Elixir.Distillery.Releases.Appup',
                        'Elixir.Distillery.Releases.Appup.Transform',
                        'Elixir.Distillery.Releases.Appup.TransformError',
                        'Elixir.Distillery.Releases.Appup.Utils',
                        'Elixir.Distillery.Releases.Archiver',
                        'Elixir.Distillery.Releases.Archiver.Archive',
                        'Elixir.Distillery.Releases.Assembler',
                        'Elixir.Distillery.Releases.BootScript',
                        'Elixir.Distillery.Releases.Checks',
                        'Elixir.Distillery.Releases.Checks.Cookie',
                        'Elixir.Distillery.Releases.Checks.Erts',
                        'Elixir.Distillery.Releases.Checks.LoadedOrphanedApps',
                        'Elixir.Distillery.Releases.Config',
                        'Elixir.Distillery.Releases.Config.LoadError',
                        'Elixir.Distillery.Releases.Config.Provider',
                        'Elixir.Distillery.Releases.Config.Providers.Elixir',
                        'Elixir.Distillery.Releases.Environment',
                        'Elixir.Distillery.Releases.Errors',
                        'Elixir.Distillery.Releases.Overlays',
                        'Elixir.Distillery.Releases.Plugin',
                        'Elixir.Distillery.Releases.Profile',
                        'Elixir.Distillery.Releases.Release',
                        'Elixir.Distillery.Releases.Runtime.Control',
                        'Elixir.Distillery.Releases.Runtime.Pidfile',
                        'Elixir.Distillery.Releases.Shell',
                        'Elixir.Distillery.Releases.Shell.Macros',
                        'Elixir.Distillery.Releases.Utils',
                        'Elixir.Mix.Tasks.Distillery.Gen.Appup',
                        'Elixir.Mix.Tasks.Distillery.Init',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock',
                        'Elixir.Mix.Tasks.Distillery.Init.MixMock.Project',
                        'Elixir.Mix.Tasks.Distillery.Release',
                        'Elixir.Mix.Tasks.Distillery.Release.Clean']},
                   {registered,[]},
                   {applications,
                       [elixir,artificery,runtime_tools,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"4.2"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,systools,systools_make,systools_rc,
                        systools_relup,systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.Broker',
                        'Elixir.IEx.CLI','Elixir.IEx.Config',
                        'Elixir.IEx.Evaluator','Elixir.IEx.Helpers',
                        'Elixir.IEx.History','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Date',
                        'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
                        'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
                        'Elixir.IEx.Info.Map','Elixir.IEx.Info.NaiveDateTime',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Time',
                        'Elixir.IEx.Info.Tuple','Elixir.IEx.Introspection',
                        'Elixir.IEx.Pry','Elixir.IEx.Server',
                        'Elixir.IEx.State']},
                   {registered,
                       ['Elixir.IEx.Broker','Elixir.IEx.Config',
                        'Elixir.IEx.Pry','Elixir.IEx.Supervisor']},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{colors,[]},
                        {inspect,[{pretty,true}]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.Filter',
                        'Elixir.Logger.Formatter','Elixir.Logger.Handler',
                        'Elixir.Logger.Translator','Elixir.Logger.Utils',
                        'Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.BackendSupervisor',
                        'Elixir.Logger.Supervisor','Elixir.Logger.Watcher']},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {discard_threshold,500},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {discard_threshold_periodic_check,30000},
                        {discard_threshold_for_error_logger,500},
                        {compile_time_purge_matching,[]},
                        {compile_time_application,nil},
                        {translator_inspect_opts,[]},
                        {console,[]},
                        {start_options,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"3.0"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,merl,
                        merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,goldrush,
                  [{description,"Erlang event stream processor"},
                   {vsn,"0.1.9"},
                   {id,[]},
                   {modules,
                       [glc,glc_code,glc_lib,glc_ops,glc_run,gr_app,
                        gr_context,gr_counter,gr_counter_sup,gr_manager,
                        gr_manager_sup,gr_param,gr_param_sup,gr_sup,gre]},
                   {registered,[]},
                   {applications,[compiler,kernel,syntax_tools,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{gr_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,lager,
                  [{description,"Erlang logging framework"},
                   {vsn,"3.9.2"},
                   {id,[]},
                   {modules,
                       [error_logger_lager_h,lager,lager_app,
                        lager_backend_throttle,lager_common_test_backend,
                        lager_config,lager_console_backend,lager_crash_log,
                        lager_default_formatter,lager_file_backend,
                        lager_format,lager_handler_watcher,
                        lager_handler_watcher_sup,lager_manager_killer,
                        lager_msg,lager_rotator_behaviour,
                        lager_rotator_default,lager_stdlib,lager_sup,
                        lager_transform,lager_trunc_io,lager_util]},
                   {registered,
                       [lager_sup,lager_event,lager_crash_log,
                        lager_handler_watcher_sup]},
                   {applications,[kernel,goldrush,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{colored,false},
                        {colors,
                            [{debug,"\e[0;38m"},
                             {info,"\e[1;37m"},
                             {notice,"\e[1;36m"},
                             {warning,"\e[1;33m"},
                             {error,"\e[1;31m"},
                             {critical,"\e[1;35m"},
                             {alert,"\e[1;44m"},
                             {emergency,"\e[1;41m"}]},
                        {log_root,"log"},
                        {crash_log,"crash.log"},
                        {crash_log_msg_size,65536},
                        {crash_log_size,10485760},
                        {crash_log_date,"$D0"},
                        {crash_log_count,5},
                        {crash_log_rotator,lager_rotator_default},
                        {error_logger_redirect,true},
                        {error_logger_hwm,50},
                        {async_threshold,20},
                        {async_threshold_window,5}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{lager_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,xmerl,
                  [{description,"XML parser"},
                   {vsn,"1.3.30"},
                   {id,[]},
                   {modules,
                       [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,
                        xmerl_html,xmerl_lib,xmerl_otpsgml,xmerl_regexp,
                        xmerl_sax_parser,xmerl_sax_parser_list,
                        xmerl_sax_parser_latin1,xmerl_sax_parser_utf8,
                        xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
                        xmerl_sax_simple_dom,xmerl_sax_old_dom,xmerl_scan,
                        xmerl_sgml,xmerl_simple,xmerl_text,xmerl_ucs,
                        xmerl_uri,xmerl_validate,xmerl_xlate,xmerl_xml,
                        xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
                        xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
                        xmerl_xsd_type]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"5.1.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{fips_mode,false},{rand_cache_size,896}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 5.0.21"},
                   {vsn,"5.0.21"},
                   {id,[]},
                   {modules,[asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.13.1"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        pubkey_ocsp,pubkey_os_cacerts,'OTP-PUB-KEY',
                        'PKCS-FRAME']},
                   {registered,[]},
                   {applications,[kernel,crypto,asn1,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"10.8.5"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_connection_1_3,tls_handshake,
                        tls_handshake_1_3,tls_record,tls_record_1_3,
                        tls_socket,tls_v1,tls_connection_sup,
                        tls_gen_connection,tls_sender,tls_server_sup,
                        tls_server_session_ticket_sup,
                        tls_server_session_ticket,tls_sup,
                        tls_dyn_connection_sup,ssl_dh_groups,dtls_connection,
                        dtls_handshake,dtls_record,dtls_socket,dtls_v1,
                        dtls_connection_sup,dtls_gen_connection,
                        dtls_packet_demux,dtls_listener_sup,dtls_sup,
                        dtls_server_sup,dtls_server_session_cache_sup,ssl,
                        ssl_session_cache_api,tls_dtls_connection,ssl_config,
                        ssl_gen_statem,ssl_handshake,ssl_record,ssl_cipher,
                        ssl_cipher_format,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,tls_bloom_filter,
                        tls_client_ticket_store,inet_tls_dist,inet6_tls_dist,
                        ssl_dist_sup,ssl_dist_connection_sup,
                        ssl_dist_admin_sup,tls_dist_sup,tls_dist_server_sup,
                        ssl_session,ssl_client_session_cache_db,
                        ssl_server_session_cache,ssl_server_session_cache_db,
                        ssl_server_session_cache_sup,
                        ssl_upgrade_server_session_cache_sup,ssl_manager,
                        ssl_pem_cache,ssl_pkix_db,ssl_certificate,ssl_crl,
                        ssl_crl_cache,ssl_crl_cache_api,ssl_crl_hash_dir,
                        ssl_logger,ssl_app,ssl_sup,ssl_admin_sup,
                        ssl_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[kernel,crypto,public_key,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tools,
                  [{description,"DEVTOOLS  CXC 138 16"},
                   {vsn,"3.5.3"},
                   {id,[]},
                   {modules,
                       [cover,cprof,eprof,fprof,instrument,lcnt,make,tags,
                        xref,xref_base,xref_compiler,xref_parser,xref_reader,
                        xref_scanner,xref_utils]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{file_util_search_methods,
                            [{[],[]},{"ebin","esrc"},{"ebin","src"}]}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,jsx,
                  [{description,"a streaming, evented json parsing toolkit"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       [jsx,jsx_config,jsx_consult,jsx_decoder,jsx_encoder,
                        jsx_parser,jsx_to_json,jsx_to_term,jsx_verify]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,recon,
                  [{description,"Diagnostic tools for production use"},
                   {vsn,"2.5.1"},
                   {id,[]},
                   {modules,
                       [recon,recon_alloc,recon_lib,recon_map,recon_rec,
                        recon_trace]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,credentials_obfuscation,
                  [{description,
                       "Helper library that obfuscates sensitive values in process state"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       [credentials_obfuscation,credentials_obfuscation_app,
                        credentials_obfuscation_pbe,
                        credentials_obfuscation_sup,
                        credentials_obfuscation_svc]},
                   {registered,[]},
                   {applications,[kernel,crypto,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{enabled,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{credentials_obfuscation_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,rabbit_common,
                  [{description,
                       "Modules shared by rabbitmq-server and rabbitmq-erlang-client"},
                   {vsn,"3.8.35"},
                   {id,[]},
                   {modules,
                       [app_utils,code_version,credit_flow,delegate,
                        delegate_sup,file_handle_cache,
                        file_handle_cache_stats,gen_server2,
                        lager_forwarder_backend,mirrored_supervisor,
                        mirrored_supervisor_locks,mnesia_sync,pmon,
                        priority_queue,rabbit_amqp_connection,
                        rabbit_amqqueue_common,rabbit_auth_backend_dummy,
                        rabbit_auth_mechanism,rabbit_authn_backend,
                        rabbit_authz_backend,rabbit_basic_common,
                        rabbit_binary_generator,rabbit_binary_parser,
                        rabbit_cert_info,rabbit_channel_common,
                        rabbit_command_assembler,rabbit_control_misc,
                        rabbit_core_metrics,rabbit_data_coercion,rabbit_env,
                        rabbit_error_logger_handler,rabbit_event,
                        rabbit_exchange_type,rabbit_framing_amqp_0_8,
                        rabbit_framing_amqp_0_9_1,rabbit_heartbeat,
                        rabbit_http_util,rabbit_json,rabbit_log,
                        rabbit_log_ra_shim,rabbit_misc,rabbit_msg_store_index,
                        rabbit_net,rabbit_nodes_common,rabbit_numerical,
                        rabbit_password_hashing,rabbit_pbe,
                        rabbit_peer_discovery_backend,rabbit_policy_validator,
                        rabbit_queue_collector,rabbit_registry,
                        rabbit_registry_class,rabbit_resource_monitor_misc,
                        rabbit_runtime,rabbit_runtime_parameter,rabbit_semver,
                        rabbit_semver_parser,rabbit_ssl_options,rabbit_types,
                        rabbit_writer,supervisor2,vm_memory_monitor,
                        worker_pool,worker_pool_sup,worker_pool_worker]},
                   {registered,[]},
                   {applications,
                       [compiler,sasl,kernel,lager,syntax_tools,xmerl,crypto,
                        public_key,ssl,tools,jsx,recon,
                        credentials_obfuscation,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,amqp_client,
                  [{description,"RabbitMQ AMQP Client"},
                   {vsn,"3.8.35"},
                   {id,[]},
                   {modules,
                       [amqp_auth_mechanisms,amqp_channel,amqp_channel_sup,
                        amqp_channel_sup_sup,amqp_channels_manager,
                        amqp_client,amqp_connection,amqp_connection_sup,
                        amqp_connection_type_sup,amqp_direct_connection,
                        amqp_direct_consumer,amqp_gen_connection,
                        amqp_gen_consumer,amqp_main_reader,
                        amqp_network_connection,amqp_rpc_client,
                        amqp_rpc_server,amqp_selective_consumer,amqp_ssl,
                        amqp_sup,amqp_uri,amqp_util,rabbit_routing_util,
                        uri_parser]},
                   {registered,[amqp_client_sup,amqp_sup]},
                   {applications,[kernel,xmerl,rabbit_common,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{prefer_ipv6,false},
                        {ssl_options,[]},
                        {writer_gc_threshold,1000000000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{amqp_client,[]}}]}]}},
     {apply,
         {application,load,
             [{application,amqp,
                  [{description,"Idiomatic Elixir client for RabbitMQ.\n"},
                   {vsn,"1.6.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.AMQP','Elixir.AMQP.Application',
                        'Elixir.AMQP.Basic','Elixir.AMQP.BasicError',
                        'Elixir.AMQP.Channel','Elixir.AMQP.Channel.Receiver',
                        'Elixir.AMQP.Channel.ReceiverManager',
                        'Elixir.AMQP.Confirm','Elixir.AMQP.Connection',
                        'Elixir.AMQP.Core','Elixir.AMQP.DirectConsumer',
                        'Elixir.AMQP.Exchange','Elixir.AMQP.Queue',
                        'Elixir.AMQP.Utils']},
                   {registered,[]},
                   {applications,[elixir,kernel,lager,amqp_client,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.AMQP.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.14.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError']},
                   {registered,[]},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"2.0.3"},
                   {id,[]},
                   {modules,['Elixir.MIME']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_crypto,
                  [{description,"Crypto-related functionality for the web"},
                   {vsn,"1.2.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Crypto','Elixir.Plug.Crypto.Application',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier']},
                   {registered,[]},
                   {applications,[elixir,kernel,crypto,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Crypto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry,
                  [{description,
                       "Dynamic dispatching library for metrics and instrumentations"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,
                       [telemetry,telemetry_app,telemetry_handler_table,
                        telemetry_sup]},
                   {registered,[]},
                   {applications,[kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,"Compose web applications with functions"},
                   {vsn,"1.13.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy2',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Application',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.BasicAuth',
                        'Elixir.Plug.Builder','Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.RewriteOn',
                        'Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.MalformedURIError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Telemetry','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError',plug_multipart]},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,eex,mime,plug_crypto,telemetry,
                        stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{validate_header_keys_during_test,true}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_pubsub,
                  [{description,"Distributed PubSub and Presence platform"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.PubSub',
                        'Elixir.Phoenix.PubSub.Adapter',
                        'Elixir.Phoenix.PubSub.Application',
                        'Elixir.Phoenix.PubSub.BroadcastError',
                        'Elixir.Phoenix.PubSub.PG2',
                        'Elixir.Phoenix.PubSub.PG2Worker',
                        'Elixir.Phoenix.PubSub.Supervisor',
                        'Elixir.Phoenix.Tracker',
                        'Elixir.Phoenix.Tracker.Clock',
                        'Elixir.Phoenix.Tracker.DeltaGeneration',
                        'Elixir.Phoenix.Tracker.Replica',
                        'Elixir.Phoenix.Tracker.Shard',
                        'Elixir.Phoenix.Tracker.State']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,crypto,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.PubSub.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_view,
                  [{description,"Views and template rendering for Phoenix"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.ExsEngine',
                        'Elixir.Phoenix.Template.UndefinedError',
                        'Elixir.Phoenix.View']},
                   {registered,[]},
                   {applications,[elixir,kernel,eex,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,castore,
                  [{description,"Up-to-date CA certificate store."},
                   {vsn,"0.1.18"},
                   {id,[]},
                   {modules,['Elixir.CAStore']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,
                       "Productive. Reliable. Fast. A productive web framework that\ndoes not compromise speed or maintainability.\n"},
                   {vsn,"1.6.13"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
                        'Elixir.Mix.Phoenix.Schema',
                        'Elixir.Mix.Tasks.Compile.Phoenix',
                        'Elixir.Mix.Tasks.Phx','Elixir.Mix.Tasks.Phx.Digest',
                        'Elixir.Mix.Tasks.Phx.Digest.Clean',
                        'Elixir.Mix.Tasks.Phx.Gen',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.HashingLibrary',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.Injector',
                        'Elixir.Mix.Tasks.Phx.Gen.Auth.Migration',
                        'Elixir.Mix.Tasks.Phx.Gen.Cert',
                        'Elixir.Mix.Tasks.Phx.Gen.Channel',
                        'Elixir.Mix.Tasks.Phx.Gen.Context',
                        'Elixir.Mix.Tasks.Phx.Gen.Embedded',
                        'Elixir.Mix.Tasks.Phx.Gen.Html',
                        'Elixir.Mix.Tasks.Phx.Gen.Json',
                        'Elixir.Mix.Tasks.Phx.Gen.Live',
                        'Elixir.Mix.Tasks.Phx.Gen.Notifier',
                        'Elixir.Mix.Tasks.Phx.Gen.Presence',
                        'Elixir.Mix.Tasks.Phx.Gen.Release',
                        'Elixir.Mix.Tasks.Phx.Gen.Schema',
                        'Elixir.Mix.Tasks.Phx.Gen.Secret',
                        'Elixir.Mix.Tasks.Phx.Gen.Socket',
                        'Elixir.Mix.Tasks.Phx.Routes',
                        'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
                        'Elixir.Phoenix.ActionClauseError',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.Channel.Server',
                        'Elixir.Phoenix.ChannelTest',
                        'Elixir.Phoenix.ChannelTest.NoopSerializer',
                        'Elixir.Phoenix.CodeReloader',
                        'Elixir.Phoenix.CodeReloader.Proxy',
                        'Elixir.Phoenix.CodeReloader.Server',
                        'Elixir.Phoenix.Config','Elixir.Phoenix.ConnTest',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Pipeline',
                        'Elixir.Phoenix.Digester',
                        'Elixir.Phoenix.Digester.Compressor',
                        'Elixir.Phoenix.Digester.Gzip',
                        'Elixir.Phoenix.Endpoint',
                        'Elixir.Phoenix.Endpoint.Cowboy2Adapter',
                        'Elixir.Phoenix.Endpoint.Cowboy2Handler',
                        'Elixir.Phoenix.Endpoint.RenderErrors',
                        'Elixir.Phoenix.Endpoint.Supervisor',
                        'Elixir.Phoenix.Endpoint.Watcher',
                        'Elixir.Phoenix.Logger',
                        'Elixir.Phoenix.MissingParamError',
                        'Elixir.Phoenix.Naming',
                        'Elixir.Phoenix.NotAcceptableError',
                        'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
                        'Elixir.Phoenix.Param.Atom',
                        'Elixir.Phoenix.Param.BitString',
                        'Elixir.Phoenix.Param.Float',
                        'Elixir.Phoenix.Param.Integer',
                        'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
                        'Elixir.Phoenix.Presence.Tracker',
                        'Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Helpers',
                        'Elixir.Phoenix.Router.MalformedURIError',
                        'Elixir.Phoenix.Router.NoRouteError',
                        'Elixir.Phoenix.Router.Resource',
                        'Elixir.Phoenix.Router.Route',
                        'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Broadcast',
                        'Elixir.Phoenix.Socket.InvalidMessageError',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.PoolSupervisor',
                        'Elixir.Phoenix.Socket.Reply',
                        'Elixir.Phoenix.Socket.Serializer',
                        'Elixir.Phoenix.Socket.Transport',
                        'Elixir.Phoenix.Socket.V1.JSONSerializer',
                        'Elixir.Phoenix.Socket.V2.JSONSerializer',
                        'Elixir.Phoenix.Token',
                        'Elixir.Phoenix.Transports.LongPoll',
                        'Elixir.Phoenix.Transports.LongPoll.Server',
                        'Elixir.Phoenix.Transports.WebSocket',
                        'Elixir.Plug.Exception.Phoenix.ActionClauseError']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,crypto,public_key,eex,plug,
                        plug_crypto,telemetry,phoenix_pubsub,phoenix_view,
                        castore,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{logger,true},
                        {stacktrace_depth,nil},
                        {filter_parameters,[<<"password">>]},
                        {serve_endpoints,false},
                        {gzippable_exts,
                            [<<".js">>,<<".map">>,<<".css">>,<<".txt">>,
                             <<".text">>,<<".html">>,<<".json">>,<<".svg">>,
                             <<".eot">>,<<".ttf">>]},
                        {static_compressors,
                            ['Elixir.Phoenix.Digester.Gzip']}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,connection,
                  [{description,
                       "Connection behaviour for connection processes\n"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,['Elixir.Connection']},
                   {registered,[]},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"2.4.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.ConnectionPool',
                        'Elixir.DBConnection.ConnectionPool.Pool',
                        'Elixir.DBConnection.EncodeError',
                        'Elixir.DBConnection.Holder',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.TransactionError',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,telemetry,connection,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,"Arbitrary precision decimal arithmetic."},
                   {vsn,"2.0.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Decimal.Macros',
                        'Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A toolkit for data mapping and language integrated query for Elixir"},
                   {vsn,"3.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Queryable',
                        'Elixir.Ecto.Adapter.Schema',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.Embedded',
                        'Elixir.Ecto.Enum',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultiplePrimaryKeyError',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError',
                        'Elixir.Ecto.ParameterizedType','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.CTE',
                        'Elixir.Ecto.Query.Builder.Combination',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.Builder.Windows',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.FromExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged',
                        'Elixir.Ecto.Query.WindowAPI',
                        'Elixir.Ecto.Query.WithExpr','Elixir.Ecto.QueryError',
                        'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Registry','Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor',
                        'Elixir.Ecto.Repo.Transaction','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Loader',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Type',
                        'Elixir.Ecto.UUID',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Jason.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Jason.Encoder.Ecto.Schema.Metadata',
                        'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,crypto,eex,telemetry,stdlib,
                        decimal]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto_sql,
                  [{description,
                       "SQL-based adapters for Ecto and database migrations"},
                   {vsn,"3.9.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapters.MyXQL',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Application',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Adapters.Tds','Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Command',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Table','Elixir.Ecto.Migrator',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Mix.EctoSQL','Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,eex,telemetry,db_connection,
                        stdlib,ecto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Adapters.SQL.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir"},
                   {vsn,"0.16.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.Enumerable.Postgrex.Stream',
                        'Elixir.Inspect.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.Circle','Elixir.Postgrex.Copy',
                        'Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.Extensions.Xid8',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.QueryError','Elixir.Postgrex.Range',
                        'Elixir.Postgrex.ReplicationConnection',
                        'Elixir.Postgrex.Result','Elixir.Postgrex.SCRAM',
                        'Elixir.Postgrex.SimpleConnection',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,crypto,db_connection,connection,
                        stdlib,decimal]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{type_server_reap_after,180000},
                        {json_library,'Elixir.Jason'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix view functions for working with HTML templates"},
                   {vsn,"3.2.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Atom',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,eex,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{csrf_token_reader,
                            {'Elixir.Plug.CSRFProtection',get_csrf_token_for,
                                []}}]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_view,
                  [{description,
                       "Rich, real-time user experiences with server-rendered HTML\n"},
                   {vsn,"0.18.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveView.Socket',
                        'Elixir.Inspect.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Inspect.Phoenix.LiveView.UploadConfig',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Element',
                        'Elixir.Inspect.Phoenix.LiveViewTest.Upload',
                        'Elixir.Inspect.Phoenix.LiveViewTest.View',
                        'Elixir.Phoenix.Component',
                        'Elixir.Phoenix.Component.Declarative',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.JS',
                        'Elixir.Phoenix.HTML.Safe.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveComponent',
                        'Elixir.Phoenix.LiveComponent.CID',
                        'Elixir.Phoenix.LiveView',
                        'Elixir.Phoenix.LiveView.Application',
                        'Elixir.Phoenix.LiveView.Channel',
                        'Elixir.Phoenix.LiveView.Component',
                        'Elixir.Phoenix.LiveView.Comprehension',
                        'Elixir.Phoenix.LiveView.Controller',
                        'Elixir.Phoenix.LiveView.Diff',
                        'Elixir.Phoenix.LiveView.Engine',
                        'Elixir.Phoenix.LiveView.HTMLAlgebra',
                        'Elixir.Phoenix.LiveView.HTMLEngine',
                        'Elixir.Phoenix.LiveView.HTMLFormatter',
                        'Elixir.Phoenix.LiveView.HTMLTokenizer',
                        'Elixir.Phoenix.LiveView.HTMLTokenizer.ParseError',
                        'Elixir.Phoenix.LiveView.Helpers',
                        'Elixir.Phoenix.LiveView.JS',
                        'Elixir.Phoenix.LiveView.Lifecycle',
                        'Elixir.Phoenix.LiveView.Logger',
                        'Elixir.Phoenix.LiveView.Plug',
                        'Elixir.Phoenix.LiveView.Rendered',
                        'Elixir.Phoenix.LiveView.Renderer',
                        'Elixir.Phoenix.LiveView.Route',
                        'Elixir.Phoenix.LiveView.Router',
                        'Elixir.Phoenix.LiveView.Session',
                        'Elixir.Phoenix.LiveView.Socket',
                        'Elixir.Phoenix.LiveView.Socket.AssignsNotInSocket',
                        'Elixir.Phoenix.LiveView.Static',
                        'Elixir.Phoenix.LiveView.Upload',
                        'Elixir.Phoenix.LiveView.UploadChannel',
                        'Elixir.Phoenix.LiveView.UploadConfig',
                        'Elixir.Phoenix.LiveView.UploadEntry',
                        'Elixir.Phoenix.LiveView.Utils',
                        'Elixir.Phoenix.LiveViewTest',
                        'Elixir.Phoenix.LiveViewTest.ClientProxy',
                        'Elixir.Phoenix.LiveViewTest.DOM',
                        'Elixir.Phoenix.LiveViewTest.Element',
                        'Elixir.Phoenix.LiveViewTest.Upload',
                        'Elixir.Phoenix.LiveViewTest.UploadClient',
                        'Elixir.Phoenix.LiveViewTest.View',
                        'Elixir.String.Chars.Phoenix.LiveComponent.CID']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,phoenix,telemetry,phoenix_html,
                        stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveView.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_metrics,
                  [{description,
                       "Provides a common interface for defining metrics based on Telemetry events.\n"},
                   {vsn,"0.6.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Telemetry.Metrics',
                        'Elixir.Telemetry.Metrics.ConsoleReporter',
                        'Elixir.Telemetry.Metrics.Counter',
                        'Elixir.Telemetry.Metrics.Distribution',
                        'Elixir.Telemetry.Metrics.LastValue',
                        'Elixir.Telemetry.Metrics.Sum',
                        'Elixir.Telemetry.Metrics.Summary']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,telemetry,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_dashboard,
                  [{description,"Real-time performance dashboard for Phoenix"},
                   {vsn,"0.7.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Inspect.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard',
                        'Elixir.Phoenix.LiveDashboard.AppInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.Application',
                        'Elixir.Phoenix.LiveDashboard.ApplicationsPage',
                        'Elixir.Phoenix.LiveDashboard.CardComponent',
                        'Elixir.Phoenix.LiveDashboard.ChartComponent',
                        'Elixir.Phoenix.LiveDashboard.ColumnsComponent',
                        'Elixir.Phoenix.LiveDashboard.EctoStatsPage',
                        'Elixir.Phoenix.LiveDashboard.EtsInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.EtsPage',
                        'Elixir.Phoenix.LiveDashboard.FieldsCardComponent',
                        'Elixir.Phoenix.LiveDashboard.Helpers',
                        'Elixir.Phoenix.LiveDashboard.HomePage',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Arrow',
                        'Elixir.Phoenix.LiveDashboard.LayeredGraphComponent.Circle',
                        'Elixir.Phoenix.LiveDashboard.LayoutView',
                        'Elixir.Phoenix.LiveDashboard.LoggerPubSubBackend',
                        'Elixir.Phoenix.LiveDashboard.MetricsPage',
                        'Elixir.Phoenix.LiveDashboard.ModalComponent',
                        'Elixir.Phoenix.LiveDashboard.NavBarComponent',
                        'Elixir.Phoenix.LiveDashboard.OSMonPage',
                        'Elixir.Phoenix.LiveDashboard.PageBuilder',
                        'Elixir.Phoenix.LiveDashboard.PageLive',
                        'Elixir.Phoenix.LiveDashboard.PageNotFound',
                        'Elixir.Phoenix.LiveDashboard.PortInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.PortsPage',
                        'Elixir.Phoenix.LiveDashboard.ProcessInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.ProcessesPage',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Line',
                        'Elixir.Phoenix.LiveDashboard.ReingoldTilford.Node',
                        'Elixir.Phoenix.LiveDashboard.RequestLogger',
                        'Elixir.Phoenix.LiveDashboard.RequestLoggerPage',
                        'Elixir.Phoenix.LiveDashboard.Router',
                        'Elixir.Phoenix.LiveDashboard.RowComponent',
                        'Elixir.Phoenix.LiveDashboard.SharedUsageCardComponent',
                        'Elixir.Phoenix.LiveDashboard.SocketInfoComponent',
                        'Elixir.Phoenix.LiveDashboard.SocketsPage',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo.PortDetails',
                        'Elixir.Phoenix.LiveDashboard.SystemInfo.ProcessDetails',
                        'Elixir.Phoenix.LiveDashboard.TableComponent',
                        'Elixir.Phoenix.LiveDashboard.TelemetryListener',
                        'Elixir.Phoenix.LiveDashboard.TitleBarComponent',
                        'Elixir.Phoenix.LiveDashboard.UsageCardComponent',
                        'Elixir.Phoenix.LiveDashboard.Web']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,mime,phoenix_live_view,
                        telemetry_metrics,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.LiveDashboard.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,esbuild,
                  [{description,
                       "Mix tasks for installing and invoking esbuild"},
                   {vsn,"0.5.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Esbuild','Elixir.Mix.Tasks.Esbuild',
                        'Elixir.Mix.Tasks.Esbuild.Install']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,castore,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{default,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Esbuild',[]}}]}]}},
     {apply,
         {application,load,
             [{application,jason,
                  [{description,
                       "A blazing fast JSON parser and generator in pure Elixir.\n"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Jason.OrderedObject',
                        'Elixir.Jason','Elixir.Jason.Codegen',
                        'Elixir.Jason.DecodeError','Elixir.Jason.Decoder',
                        'Elixir.Jason.Decoder.Unescape','Elixir.Jason.Encode',
                        'Elixir.Jason.EncodeError','Elixir.Jason.Encoder',
                        'Elixir.Jason.Encoder.Any',
                        'Elixir.Jason.Encoder.Atom',
                        'Elixir.Jason.Encoder.BitString',
                        'Elixir.Jason.Encoder.Date',
                        'Elixir.Jason.Encoder.DateTime',
                        'Elixir.Jason.Encoder.Decimal',
                        'Elixir.Jason.Encoder.Float',
                        'Elixir.Jason.Encoder.Integer',
                        'Elixir.Jason.Encoder.Jason.Fragment',
                        'Elixir.Jason.Encoder.Jason.OrderedObject',
                        'Elixir.Jason.Encoder.List',
                        'Elixir.Jason.Encoder.Map',
                        'Elixir.Jason.Encoder.NaiveDateTime',
                        'Elixir.Jason.Encoder.Time','Elixir.Jason.Formatter',
                        'Elixir.Jason.Fragment','Elixir.Jason.Helpers',
                        'Elixir.Jason.OrderedObject','Elixir.Jason.Sigil']},
                   {registered,[]},
                   {applications,[elixir,kernel,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,swoosh,
                  [{description,
                       "Compose, deliver and test your emails easily in Elixir. Supports SMTP,\nSendgrid, Mandrill, Postmark and Mailgun out of the box.\nPreview your mails in the browser. Great integration with Phoenix.\n"},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Tasks.Swoosh.Mailbox.Server',
                        'Elixir.Plug.Swoosh.MailboxPreview','Elixir.Swoosh',
                        'Elixir.Swoosh.Adapter',
                        'Elixir.Swoosh.Adapters.AmazonSES',
                        'Elixir.Swoosh.Adapters.Dyn',
                        'Elixir.Swoosh.Adapters.ExAwsAmazonSES',
                        'Elixir.Swoosh.Adapters.Gmail',
                        'Elixir.Swoosh.Adapters.Local',
                        'Elixir.Swoosh.Adapters.Local.Storage.Manager',
                        'Elixir.Swoosh.Adapters.Local.Storage.Memory',
                        'Elixir.Swoosh.Adapters.Logger',
                        'Elixir.Swoosh.Adapters.MailPace',
                        'Elixir.Swoosh.Adapters.Mailgun',
                        'Elixir.Swoosh.Adapters.Mailjet',
                        'Elixir.Swoosh.Adapters.Mandrill',
                        'Elixir.Swoosh.Adapters.OhMySmtp',
                        'Elixir.Swoosh.Adapters.Postmark',
                        'Elixir.Swoosh.Adapters.SMTP',
                        'Elixir.Swoosh.Adapters.SMTP.Helpers',
                        'Elixir.Swoosh.Adapters.SMTP2GO',
                        'Elixir.Swoosh.Adapters.Sendgrid',
                        'Elixir.Swoosh.Adapters.Sendinblue',
                        'Elixir.Swoosh.Adapters.Sendmail',
                        'Elixir.Swoosh.Adapters.SocketLabs',
                        'Elixir.Swoosh.Adapters.SparkPost',
                        'Elixir.Swoosh.Adapters.Test',
                        'Elixir.Swoosh.Adapters.XML.Helpers',
                        'Elixir.Swoosh.ApiClient',
                        'Elixir.Swoosh.ApiClient.Finch',
                        'Elixir.Swoosh.ApiClient.Hackney',
                        'Elixir.Swoosh.Application',
                        'Elixir.Swoosh.Attachment',
                        'Elixir.Swoosh.AttachmentContentError',
                        'Elixir.Swoosh.DeliveryError','Elixir.Swoosh.Email',
                        'Elixir.Swoosh.Email.Recipient',
                        'Elixir.Swoosh.Email.Recipient.Any',
                        'Elixir.Swoosh.Email.Recipient.BitString',
                        'Elixir.Swoosh.Email.Recipient.Tuple',
                        'Elixir.Swoosh.Email.Render','Elixir.Swoosh.Mailer',
                        'Elixir.Swoosh.TestAssertions']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,xmerl,mime,telemetry,jason,
                        stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{json_library,'Elixir.Jason'},
                        {api_client,'Elixir.Swoosh.ApiClient.Hackney'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Swoosh.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,telemetry_poller,
                  [{description,
                       "Periodically collect measurements and dispatch them as Telemetry events."},
                   {vsn,"1.0.0"},
                   {id,[]},
                   {modules,
                       [telemetry_poller,telemetry_poller_app,
                        telemetry_poller_builtin,telemetry_poller_sup]},
                   {registered,[]},
                   {applications,[kernel,telemetry,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{telemetry_poller_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.20.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Interpolation.Default',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Gettext.PluralFormError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,
                       [{default_locale,<<"en">>},
                        {plural_forms,'Elixir.Gettext.Plural'}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_crc32c,ranch_listener_sup,
                        ranch_protocol,ranch_proxy_header,ranch_server,
                        ranch_ssl,ranch_sup,ranch_tcp,ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[kernel,ssl,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"2.11.0"},
                   {id,[]},
                   {modules,
                       [cow_base64url,cow_cookie,cow_date,cow_hpack,cow_http,
                        cow_http2,cow_http2_machine,cow_http_hd,
                        cow_http_struct_hd,cow_http_te,cow_iolists,cow_link,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy,cow_sse,
                        cow_uri,cow_uri_template,cow_ws]},
                   {registered,[]},
                   {applications,[kernel,crypto,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modern HTTP server."},
                   {vsn,"2.9.0"},
                   {id,[]},
                   {modules,
                       [cowboy,cowboy_app,cowboy_bstr,cowboy_children,
                        cowboy_clear,cowboy_clock,cowboy_compress_h,
                        cowboy_constraints,cowboy_handler,cowboy_http,
                        cowboy_http2,cowboy_loop,cowboy_metrics_h,
                        cowboy_middleware,cowboy_req,cowboy_rest,
                        cowboy_router,cowboy_static,cowboy_stream,
                        cowboy_stream_h,cowboy_sub_protocol,cowboy_sup,
                        cowboy_tls,cowboy_tracer_h,cowboy_websocket]},
                   {registered,[cowboy_sup,cowboy_clock]},
                   {applications,[kernel,crypto,ranch,stdlib,cowlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy_telemetry,
                  [{description,"Telemetry instrumentation for Cowboy"},
                   {vsn,"0.4.0"},
                   {id,[]},
                   {modules,[cowboy_telemetry_h]},
                   {registered,[]},
                   {applications,[kernel,telemetry,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug_cowboy,
                  [{description,"A Plug adapter for Cowboy"},
                   {vsn,"2.5.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Plug.Cowboy','Elixir.Plug.Cowboy.Conn',
                        'Elixir.Plug.Cowboy.Drainer',
                        'Elixir.Plug.Cowboy.Handler',
                        'Elixir.Plug.Cowboy.Translator']},
                   {registered,[]},
                   {applications,
                       [elixir,kernel,logger,plug,cowboy,cowboy_telemetry,
                        stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug.Cowboy',[]}}]}]}},
     {apply,
         {application,load,
             [{application,secure_random,
                  [{description,
                       "A convienance library based on Ruby's SecureRandom"},
                   {vsn,"0.5.1"},
                   {id,[]},
                   {modules,['Elixir.SecureRandom']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,crypto,stdlib]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_ecto,
                  [{description,"Integration between Phoenix & Ecto"},
                   {vsn,"4.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.Ecto',
                        'Elixir.Phoenix.Ecto.CheckRepoStatus',
                        'Elixir.Phoenix.Ecto.PendingMigrationError',
                        'Elixir.Phoenix.Ecto.SQL.Sandbox',
                        'Elixir.Phoenix.Ecto.SQL.SandboxSession',
                        'Elixir.Phoenix.Ecto.StorageNotCreatedError',
                        'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
                        'Elixir.Phoenix.HTML.Safe.Decimal',
                        'Elixir.Plug.Exception.Ecto.CastError',
                        'Elixir.Plug.Exception.Ecto.NoResultsError',
                        'Elixir.Plug.Exception.Ecto.Query.CastError',
                        'Elixir.Plug.Exception.Ecto.StaleEntryError',
                        'Elixir.Plug.Exception.Ecto.SubQueryError',
                        'Elixir.Plug.Exception.Phoenix.Ecto.PendingMigrationError',
                        'Elixir.Plug.Exception.Phoenix.Ecto.StorageNotCreatedError']},
                   {registered,[]},
                   {applications,[elixir,kernel,logger,plug,stdlib,ecto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[{exclude_ecto_exceptions_from_plug,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.Ecto',[]}}]}]}},
     {apply,
         {application,load,
             [{application,payments,
                  [{description,"payments"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Messages.Sender','Elixir.Payments',
                        'Elixir.Payments.Application',
                        'Elixir.Payments.Mailer','Elixir.Payments.Repo',
                        'Elixir.Payments.Transactions',
                        'Elixir.Payments.Transactions.Order',
                        'Elixir.PaymentsWeb',
                        'Elixir.PaymentsWeb.ChangesetView',
                        'Elixir.PaymentsWeb.Endpoint',
                        'Elixir.PaymentsWeb.ErrorHelpers',
                        'Elixir.PaymentsWeb.ErrorView',
                        'Elixir.PaymentsWeb.FallbackController',
                        'Elixir.PaymentsWeb.Gettext',
                        'Elixir.PaymentsWeb.OrderController',
                        'Elixir.PaymentsWeb.OrderView',
                        'Elixir.PaymentsWeb.Router',
                        'Elixir.PaymentsWeb.Router.Helpers',
                        'Elixir.PaymentsWeb.Telemetry']},
                   {registered,[]},
                   {applications,
                       [elixir,distillery,runtime_tools,kernel,logger,amqp,
                        phoenix,ecto_sql,postgrex,phoenix_live_dashboard,
                        telemetry_metrics,esbuild,swoosh,jason,
                        telemetry_poller,gettext,plug_cowboy,secure_random,
                        stdlib,phoenix_ecto]},
                   {optional_applications,[]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Payments.Application',[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[mix,permanent]}},
     {apply,{application,start_boot,[artificery,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[distillery,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[goldrush,permanent]}},
     {apply,{application,start_boot,[lager,permanent]}},
     {apply,{application,start_boot,[xmerl,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[tools,permanent]}},
     {apply,{application,start_boot,[jsx,permanent]}},
     {apply,{application,start_boot,[recon,permanent]}},
     {apply,{application,start_boot,[credentials_obfuscation,permanent]}},
     {apply,{application,start_boot,[rabbit_common,permanent]}},
     {apply,{application,start_boot,[amqp_client,permanent]}},
     {apply,{application,start_boot,[amqp,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[plug_crypto,permanent]}},
     {apply,{application,start_boot,[telemetry,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[phoenix_pubsub,permanent]}},
     {apply,{application,start_boot,[phoenix_view,permanent]}},
     {apply,{application,start_boot,[castore,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[connection,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[ecto_sql,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[phoenix_live_view,permanent]}},
     {apply,{application,start_boot,[telemetry_metrics,permanent]}},
     {apply,{application,start_boot,[phoenix_live_dashboard,permanent]}},
     {apply,{application,start_boot,[esbuild,permanent]}},
     {apply,{application,start_boot,[jason,permanent]}},
     {apply,{application,start_boot,[swoosh,permanent]}},
     {apply,{application,start_boot,[telemetry_poller,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[cowboy_telemetry,permanent]}},
     {apply,{application,start_boot,[plug_cowboy,permanent]}},
     {apply,{application,start_boot,[secure_random,permanent]}},
     {apply,{application,start_boot,[phoenix_ecto,permanent]}},
     {apply,{application,start_boot,[payments,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
